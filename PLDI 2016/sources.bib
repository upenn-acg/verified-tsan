@article{atl,
 author = {Alur, Rajeev and Henzinger, Thomas A. and Kupferman, Orna},
 title = {Alternating-time temporal logic},
 journal = {J. ACM},
 volume = {49},
 number = {5},
 year = {2002},
 issn = {0004-5411},
 pages = {672--713},
 doi = {http://doi.acm.org/10.1145/585265.585270},
 publisher = {ACM},
 address = {New York, NY, USA},
 }

@article{kalvala,
 author = {Kalvala, Sara and Warburton, Richard and Lacey, David},
 title = {Program transformations using temporal logic side conditions},
 journal = {ACM Trans. Program. Lang. Syst.},
 volume = {31},
 number = {4},
 year = {2009},
 issn = {0164-0925},
 pages = {1--48},
 doi = {http://doi.acm.org/10.1145/1516507.1516509},
 publisher = {ACM},
 address = {New York, NY, USA},
 }

@article{lacey,
 author = {Lacey, David and Jones, Neil D. and Van Wyk, Eric and Frederiksen, Carl Christian},
 title = {Proving correctness of compiler optimizations by temporal logic},
 journal = {SIGPLAN Not.},
 issue_date = {Jan. 2002},
 volume = {37},
 number = {1},
 month = jan,
 year = {2002},
 issn = {0362-1340},
 pages = {283--294},
 numpages = {12},
 doi = {10.1145/565816.503299},
 acmid = {503299},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@conference{blech,
  author={Jan Olaf Blech and Sabine Glesner},
  title={A Formal Correctness Proof for Code Generation from {SSA} Form 
in {Isabelle/HOL}},
  booktitle={Proceedings der 3. Arbeitstagung Programmiersprachen (ATPS) auf der 34. Jahrestagung der Gesellschaft f{\"u}r Informatik},
  year={2004},
  month={September},
  publisher={Lecture Notes in Informatics},
  abstract={Optimizations in compilers are the most error-prone phases in the
compilation process. Since correct compilers are a vital precondition
for software correctness, it is necessary to prove their
correctness. We develop a formal semantics for static
single assignment (SSA) intermediate representations and prove
formally within the Isabelle/HOL theorem prover that a relatively
simple form of code generation preserves the semantics of the
transformed programs in SSA form. This formal correctness proof does
not only verify the correctness of a certain class of code generation
algorithms but also gives us a sufficient, easily checkable
correctness criterion characterizing correct compilation results
obtained from implementations (compilers) of these algorithms.},
  url={http://www.info.uni-karlsruhe.de/papers/Blech-Glesner-ATPS-2004.pdf},
}

@incollection{isabelle,
	Author = {Lawrence C. Paulson},
	Booktitle = {Logic and Computer Science},
	Date-Modified = {2005-04-20 12:07:55 +0100},
	Editor = {P. Odifreddi},
	Pages = {361-386},
	Publisher = {Academic Press},
	Title = {{Isabelle}: The Next 700 Theorem Provers},
	Year = {1990}}

@inproceedings{ppg,
 author = {Sarkar, Vivek},
 title = {Analysis and Optimization of Explicitly Parallel Programs Using the Parallel Program Graph Representation},
 booktitle = {LCPC '97: Proceedings of the 10th International Workshop on Languages and Compilers for Parallel Computing},
 year = {1998},
 isbn = {3-540-64472-5},
 pages = {94--113},
 publisher = {Springer-Verlag},
 address = {London, UK},
 }

@book{tiger,
 author = {Appel, Andrew W.},
 title = {Modern Compiler Implementation in {ML}},
 year = {2004},
 isbn = {0521607647},
 publisher = {Cambridge University Press},
 address = {New York, NY, USA},
 }

@inproceedings{valid,
 author = {Pnueli, Amir and Siegel, Michael and Singerman, Eli},
 title = {Translation Validation},
 booktitle = {TACAS '98: Proceedings of the 4th International Conference on Tools and Algorithms for Construction and Analysis of Systems},
 year = {1998},
 isbn = {3-540-64356-7},
 pages = {151--166},
 publisher = {Springer-Verlag},
 address = {London, UK},
 }

@inproceedings{leroy,
 author = {Leroy, Xavier},
 title = {Formal certification of a compiler back-end or: programming a compiler with a proof assistant},
 booktitle = {POPL '06: Conference record of the 33rd ACM SIGPLAN-SIGACT symposium on Principles of Programming Languages},
 year = {2006},
 isbn = {1-59593-027-2},
 pages = {42--54},
 location = {Charleston, South Carolina, USA},
 doi = {http://doi.acm.org/10.1145/1111037.1111042},
 publisher = {ACM},
 address = {New York, NY, USA},
 }
 
 @article{visser,
 author = {Visser, Eelco and Benaissa, Zine-el-Abidine and Tolmach, Andrew},
 title = {Building program optimizers with rewriting strategies},
 journal = {SIGPLAN Not.},
 volume = {34},
 number = {1},
 year = {1999},
 issn = {0362-1340},
 pages = {13--26},
 doi = {http://doi.acm.org/10.1145/291251.289425},
 publisher = {ACM},
 address = {New York, NY, USA},
 }

@inproceedings{ctl,
 author = {Ben-Ari, Mordechai and Manna, Zohar and Pnueli, Amir},
 title = {The temporal logic of branching time},
 booktitle = {POPL '81: Proceedings of the 8th ACM SIGPLAN-SIGACT symposium on Principles of Programming Languages},
 year = {1981},
 isbn = {0-89791-029-X},
 pages = {164--176},
 location = {Williamsburg, Virginia},
 doi = {http://doi.acm.org/10.1145/567532.567551},
 publisher = {ACM},
 address = {New York, NY, USA},
 }

@article{bugs,
 author = {McKeeman, William M.},
 title = {A Formally Verified Compiler Back-end},
 journal = {Digital Technical Journal},
 volume = {10},
 number = {1},
 year = {1998},
 pages = {100--107},
 publisher = {Digital Equipment Corporation},
 issn = {0898-901X},
 }
 
 @article{moore,
 author = {Moore, J. Strother},
 title = {A mechanically verified language implementation},
 journal = {J. Autom. Reason.},
 volume = {5},
 number = {4},
 year = {1989},
 issn = {0168-7433},
 pages = {461--492},
 publisher = {Springer-Verlag New York, Inc.},
 address = {Secaucus, NJ, USA},
 }
 
 @inproceedings{alpern,
 author = {Alpern, B. and Wegman, M. N. and Zadeck, F. K.},
 title = {Detecting equality of variables in programs},
 booktitle = {POPL '88: Proceedings of the 15th ACM SIGPLAN-SIGACT symposium on Principles of Programming Languages},
 year = {1988},
 isbn = {0-89791-252-7},
 pages = {1--11},
 location = {San Diego, California, United States},
 doi = {http://doi.acm.org/10.1145/73560.73561},
 publisher = {ACM},
 address = {New York, NY, USA},
 }

@inproceedings{tristan,
 author = {Tristan, Jean-Baptiste and Leroy, Xavier},
 title = {Formal verification of translation validators: a case study on instruction scheduling optimizations},
 booktitle = {POPL '08: Proceedings of the 35th annual ACM SIGPLAN-SIGACT symposium on Principles of Programming Languages},
 year = {2008},
 isbn = {978-1-59593-689-9},
 pages = {17--27},
 location = {San Francisco, California, USA},
 doi = {http://doi.acm.org/10.1145/1328438.1328444},
 publisher = {ACM},
 address = {New York, NY, USA},
 }

@misc{code,
Author={William Mansky},
Howpublished={\url{http://www.cs.illinois.edu/homes/mansky1}},
Title={{TRANS in Isabelle}}
}

@article{conjtla,
 author = {Abadi, Mart\'{\i}n and Lamport, Leslie},
 title = {Conjoining specifications},
 journal = {ACM Trans. Program. Lang. Syst.},
 issue_date = {May 1995},
 volume = {17},
 issue = {3},
 month = {May},
 year = {1995},
 issn = {0164-0925},
 pages = {507--535},
 numpages = {29},
 doi = {http://doi.acm.org/10.1145/203095.201069},
 acmid = {201069},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {composition, concurrent programming, decomposition, liveness properties, modular specification, safety properties, temporal logic},
}

@article{tla,
 author = {Lamport, Leslie},
 title = {The temporal logic of actions},
 journal = {ACM Trans. Program. Lang. Syst.},
 volume = {16},
 issue = {3},
 month = {May},
 year = {1994},
 issn = {0164-0925},
 pages = {872--923},
 numpages = {52},
 doi = {http://doi.acm.org/10.1145/177492.177726},
 acmid = {177726},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {concurrent programming, liveness properties, safety properties},
} 

@article{strategy,
 author = {Chatterjee, Krishnendu and Henzinger, Thomas A. and Piterman, Nir},
 title = {Strategy logic},
 journal = {Inf. Comput.},
 volume = {208},
 issue = {6},
 month = {June},
 year = {2010},
 issn = {0890-5401},
 pages = {677--693},
 numpages = {17},
 url = {http://dx.doi.org/10.1016/j.ic.2009.07.004},
 doi = {http://dx.doi.org/10.1016/j.ic.2009.07.004},
 acmid = {1805361},
 publisher = {Academic Press, Inc.},
 address = {Duluth, MN, USA},
 keywords = {ATL and ATL\&\#8727;, Automata theory, Game theory, Logic, Nonzero-sum games},
}

@inproceedings{iatl,
 author = {{\AA}gotnes, Thomas and Goranko, Valentin and Jamroga, Wojciech},
 title = {Alternating-time temporal logics with irrevocable strategies},
 booktitle = {Proceedings of the 11th conference on Theoretical aspects of rationality and knowledge},
 series = {TARK '07},
 year = {2007},
 location = {Brussels, Belgium},
 pages = {15--24},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/1324249.1324256},
 doi = {http://doi.acm.org/10.1145/1324249.1324256},
 acmid = {1324256},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@phdthesis{ayesha,
author = {Yasmeen, Ayesha},
title = {Formalizing operator task analysis},
school = {University of Illinois at Urbana-Champaign, USA},
year = {2011},
}

@incollection{perfect-recall,
 author = {Guelev, Dimitar P. and Dima, Catalin},
 chapter = {Model-Checking Strategic Ability and Knowledge of the Past of Communicating Coalitions},
 title = {Declarative Agent Languages and Technologies {VI}},
 editor = {Baldoni, Matteo and Son, Tran Cao and Riemsdijk, M. Birna and Winikoff, Michael},
 year = {2009},
 isbn = {978-3-540-93919-1},
 pages = {75--90},
 numpages = {16},
 url = {http://dx.doi.org/10.1007/978-3-540-93920-7\_6},
 doi = {http://dx.doi.org/10.1007/978-3-540-93920-7\_6},
 acmid = {1505863},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
} 

@inproceedings{DimaEneaGuelev,
  author    = {Catalin Dima and
               Constantin Enea and
               Dimitar P. Guelev},
  title     = {Model-Checking an Alternating-time Temporal Logic with Knowledge,
               Imperfect Information, Perfect Recall and Communicating
               Coalitions},
  booktitle = {GANDALF},
  year      = {2010},
  pages     = {103-117},
  ee        = {http://dx.doi.org/10.4204/EPTCS.25.12},
  crossref  = {DBLP:journals/corr/abs-1006-1711},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@ARTICLE{rely-guarantee,
AUTHOR = "Qiwen Xu and Willem P. de Roever and Jifeng He",
TITLE = "The Rely-Guarantee Method for Verifying Shared Variable Concurrent Programs.",
JOURNAL = "Formal Aspects of Computing",
volume = {9},
issue = {2},
month = {March},
PAGES = {149-174},
year = {1997}  }


@article{jones,
 author = {Jones, C. B.},
 title = {Tentative steps toward a development method for interfering programs},
 journal = {ACM Trans. Program. Lang. Syst.},
 volume = {5},
 issue = {4},
 month = {October},
 year = {1983},
 issn = {0164-0925},
 pages = {596--619},
 numpages = {24},
 url = {http://doi.acm.org/10.1145/69575.69577},
 doi = {http://doi.acm.org/10.1145/69575.69577},
 acmid = {69577},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@INPROCEEDINGS{stit,
    author = {Jan Broersen and Andreas Herzig and Nicolas Troquard},
    title = {A {STIT}-extension of {ATL}},
    booktitle = {In Tenth European Conference on Logics in Artificial Intelligence (JELIA'06},
    year = {2006},
    pages = {69--81},
    publisher = {Springer}
}

@inproceedings{relentful,
 author = {Mogavero, Fabio and Murano, Aniello and Vardi, Moshe Y.},
 title = {Relentful strategic reasoning in alternating-time temporal logic},
 booktitle = {Proceedings of the 16th international conference on Logic for programming, artificial intelligence, and reasoning},
 series = {LPAR'10},
 year = {2010},
 isbn = {3-642-17510-4, 978-3-642-17510-7},
 location = {Dakar, Senegal},
 pages = {371--386},
 numpages = {16},
 url = {http://dl.acm.org/citation.cfm?id=1939141.1939162},
 acmid = {1939162},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
}

@inproceedings{ELG09,
  author    = {Elsa L. Gunter and
               Ayesha Yasmeen and
               Carl A. Gunter and
               Anh Nguyen},
  title     = {Specifying and Analyzing Workflows for Automated Identification
               and Data Capture},
  booktitle = {HICSS},
  year      = {2009},
  pages     = {1-11},
  ee        = {http://dx.doi.org/10.1109/HICSS.2009.402},
  crossref  = {DBLP:conf/hicss/2009},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@inproceedings{javacard,
 author = {Barthe, Gilles and Courtieu, Pierre and Dufay, Guillaume and Sousa, Sim\~{a}o Melo de},
 title = {Tool-Assisted Specification and Verification of the {JavaCard} Platform},
 booktitle = {Proceedings of the 9th International Conference on Algebraic Methodology and Software Technology},
 series = {AMAST '02},
 year = {2002},
 isbn = {3-540-44144-1},
 pages = {41--59},
 numpages = {19},
 url = {http://dl.acm.org/citation.cfm?id=646061.676163},
 acmid = {676163},
 publisher = {Springer-Verlag},
 address = {London, UK, UK},
} 

@book{bertotbook,
 author = {Bertot, Yves and Casteran, Pierre},
 title = {Interactive Theorem Proving and Program Development},
 year = {2004},
 isbn = {3540208542},
 publisher = {SpringerVerlag},
} 

@inproceedings{regalloc,
 author = {Chaitin, G. J.},
 title = {Register allocation \& spilling via graph coloring},
 booktitle = {Proceedings of the 1982 SIGPLAN symposium on Compiler construction},
 series = {SIGPLAN '82},
 year = {1982},
 isbn = {0-89791-074-5},
 location = {Boston, Massachusetts, United States},
 pages = {98--105},
 numpages = {8},
 url = {http://doi.acm.org/10.1145/800230.806984},
 doi = {http://doi.acm.org/10.1145/800230.806984},
 acmid = {806984},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@article{regalloc2,
 author = {Chaitin, G. J.},
 title = {Register allocation \& spilling via graph coloring},
 journal = {SIGPLAN Not.},
 volume = {17},
 issue = {6},
 month = {June},
 year = {1982},
 issn = {0362-1340},
 pages = {98--101},
 numpages = {4},
 url = {http://doi.acm.org/10.1145/872726.806984},
 doi = {http://doi.acm.org/10.1145/872726.806984},
 acmid = {806984},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@article{verifbib,
 author = {Dave, Maulik A.},
 title = {Compiler verification: a bibliography},
 journal = {SIGSOFT Softw. Eng. Notes},
 volume = {28},
 issue = {6},
 month = {November},
 year = {2003},
 issn = {0163-5948},
 pages = {2--2},
 numpages = {1},
 url = {http://doi.acm.org/10.1145/966221.966235},
 doi = {http://doi.acm.org/10.1145/966221.966235},
 acmid = {966235},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@article{bytecodeverif,
 author = {Klein, Gerwin and Nipkow, Tobias},
 title = {Verified bytecode verifiers},
 journal = {Theor. Comput. Sci.},
 volume = {298},
 issue = {3},
 month = {April},
 year = {2003},
 issn = {0304-3975},
 pages = {583--626},
 numpages = {44},
 url = {http://dl.acm.org/citation.cfm?id=773691.773699},
 doi = {10.1016/S0304-3975(02)00869-1},
 acmid = {773699},
 publisher = {Elsevier Science Publishers Ltd.},
 address = {Essex, UK},
 keywords = {Java, bytecode verification, data flow analysis, object initialization, theorem proving},
} 

@inproceedings{pipelineopt,
 author = {Leviathan, Raya and Pnueli, Amir},
 title = {Validating software pipelining optimizations},
 booktitle = {Proceedings of the 2002 international conference on Compilers, architecture, and synthesis for embedded systems},
 series = {CASES '02},
 year = {2002},
 isbn = {1-58113-575-0},
 location = {Grenoble, France},
 pages = {280--287},
 numpages = {8},
 url = {http://doi.acm.org/10.1145/581630.581676},
 doi = {http://doi.acm.org/10.1145/581630.581676},
 acmid = {581676},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {compilers, optimization, pipeline processors, translation validation, verification},
} 

@techreport{zuckvalid,
 author = {Zuck, L. and Pnueli, A. and Leviathan, R.},
 title = {Validation of Optimizing Compilers},
 year = {2001},
 institution = {Weizmann Institute of Science}, source = {http://www.ncstrl.org:8900/ncstrl/servlet/search?formname=detail\&id=oai%3Ancstrlh%3Aweizmann_il%3Ancstrl.weizmann_il%2F%2FMCS01-12},
 publisher = {Weizmann Science Press of Israel},
 address = {Jerusalem, Israel, Israel},
} 

@incollection{goerigk,
 author = {Goerigk, Wolfgang},
 chapter = {Compiler verification revisited},
 title = {Computer-Aided reasoning},
 year = {2000},
 isbn = {0-7923-7849-0},
 pages = {247--264},
 numpages = {18},
 url = {http://dl.acm.org/citation.cfm?id=366027.369101},
 acmid = {369101},
 publisher = {Kluwer Academic Publishers},
 address = {Norwell, MA, USA},
} 

@article{isabellew,
 author = {Naraschewski, Wolfgang and Nipkow, Tobias},
 title = {Type Inference Verified: Algorithm {W} in Isabelle/HOL},
 journal = {J. Autom. Reason.},
 volume = {23},
 issue = {3},
 month = {November},
 year = {1999},
 issn = {0168-7433},
 pages = {299--318},
 numpages = {20},
 url = {http://dx.doi.org/10.1023/A:1006277616879},
 doi = {http://dx.doi.org/10.1023/A:1006277616879},
 acmid = {594270},
 publisher = {Springer-Verlag New York, Inc.},
 address = {Secaucus, NJ, USA},
 keywords = {Isabelle/HOL, Mini-ML, machine-checked proof, type inference},
} 

@inproceedings{veriflex,
 author = {Nipkow, Tobias},
 title = {Verified Lexical Analysis},
 booktitle = {Proceedings of the 11th International Conference on Theorem Proving in Higher Order Logics},
 year = {1998},
 isbn = {3-540-64987-5},
 pages = {1--15},
 numpages = {15},
 url = {http://dl.acm.org/citation.cfm?id=646525.694868},
 acmid = {694868},
 publisher = {Springer-Verlag},
 address = {London, UK},
} 

@inproceedings{synctransvalid,
 author = {Pnueli, Amir and Shtrichman, Ofer and Siegel, Michael},
 title = {Translation Validation for Synchronous Languages},
 booktitle = {Proceedings of the 25th International Colloquium on Automata, Languages and Programming},
 series = {ICALP '98},
 year = {1998},
 isbn = {3-540-64781-3},
 pages = {235--246},
 numpages = {12},
 url = {http://dl.acm.org/citation.cfm?id=646252.686146},
 acmid = {686146},
 publisher = {Springer-Verlag},
 address = {London, UK},
} 

@inproceedings{peepholeopt,
 author = {Dold, Axel and Henke, Friedrich W. von and Pfeifer, Holger and Rue\ss, Harald},
 title = {Formal Verification of Transformations for Peephole Optimization},
 booktitle = {Proceedings of the 4th International Symposium of Formal Methods Europe on Industrial Applications and Strengthened Foundations of Formal Methods},
 series = {FME '97},
 year = {1997},
 isbn = {3-540-63533-5},
 pages = {459--472},
 numpages = {14},
 url = {http://dl.acm.org/citation.cfm?id=647538.729832},
 acmid = {729832},
 publisher = {Springer-Verlag},
 address = {London, UK},
} 

@inproceedings{ghostvars,
 author = {Marcus, M. and Pnueli, Amir},
 title = {Using Ghost Variables to Prove Refinement},
 booktitle = {Proceedings of the 5th International Conference on Algebraic Methodology and Software Technology},
 series = {AMAST '96},
 year = {1996},
 isbn = {3-540-61463-X},
 pages = {226--240},
 numpages = {15},
 url = {http://dl.acm.org/citation.cfm?id=646057.678341},
 acmid = {678341},
 publisher = {Springer-Verlag},
 address = {London, UK},
} 

@article{vlisp,
 author = {Guttman, Joshua D. and Ramsdell, John D. and Swarup, Vipin},
 title = {The {VLISP} verified {S}cheme system},
 journal = {Lisp Symb. Comput.},
 volume = {8},
 issue = {1-2},
 month = {March},
 year = {1995},
 issn = {0892-4635},
 pages = {33--110},
 numpages = {78},
 url = {http://dl.acm.org/citation.cfm?id=211193.211196},
 doi = {10.1007/BF01128407},
 acmid = {211196},
 publisher = {Kluwer Academic Publishers},
 address = {Hingham, MA, USA},
 keywords = {Scheme, compiler, denotational semantics, garbage collection, interpreter, operational semantics, refinement, verified},
} 

@inproceedings{interpverif,
 author = {Broy, Manfred and Hinkel, Ursula and Nipkow, Tobias and Prehofer, Christian and Schieder, Birgit},
 title = {Interpreter Verification for a Functional Language},
 booktitle = {Proceedings of the 14th Conference on Foundations of Software Technology and Theoretical Computer Science},
 year = {1994},
 isbn = {3-540-58715-2},
 pages = {77--88},
 numpages = {12},
 url = {http://dl.acm.org/citation.cfm?id=646832.707885},
 acmid = {707885},
 publisher = {Springer-Verlag},
 address = {London, UK},
} 

@inproceedings{franzlecodegen,
 author = {Fr\"{a}nzle, Martin and M\"{u}ller-Olm, Markus},
 title = {Towards Provably Correct Code Gneration for a Hard Real-Time Programming Language},
 booktitle = {Proceedings of the 5th International Conference on Compiler Construction},
 series = {CC '94},
 year = {1994},
 isbn = {3-540-57877-3},
 pages = {294--308},
 numpages = {15},
 url = {http://dl.acm.org/citation.cfm?id=647472.727431},
 acmid = {727431},
 publisher = {Springer-Verlag},
 address = {London, UK},
} 

@phdthesis{norvellthesis,
 author = {Norvell, Theodore Stevens},
 advisor = {Hehner, Eric C.},
 title = {A predicative theory of machine languages and its application to compiler correctness},
 year = {1994},
 isbn = {0-315-92736-4},
 note = {AAINN92736},
 publisher = {University of Toronto},
 address = {Toronto, Ont., Canada, Canada},
} 

@inproceedings{occam1,
 author = {B\"{o}rger, Egon and Durdanovic, Igor and Rosenzweig, Dean},
 title = {Occam: Specification and Compiler Correctness - Part {I}: The Primary Model},
 booktitle = {Proceedings of the IFIP TC2/WG2.1/WG2.2/WG2.3 Working Conference on Programming Concepts, Methods and Calculi},
 series = {PROCOMET '94},
 year = {1994},
 isbn = {0-444-82020-5},
 pages = {489--508},
 numpages = {20},
 url = {http://dl.acm.org/citation.cfm?id=647320.721187},
 acmid = {721187},
 publisher = {North-Holland Publishing Co.},
 address = {Amsterdam, The Netherlands, The Netherlands},
} 

@phdthesis{gladsteinconc,
 author = {Gladstein, David Steven},
 title = {Compiler correctness for concurrent languages},
 year = {1995},
 note = {UMI Order No. GAX95-23640},
 publisher = {Northeastern University},
 address = {Boston, MA, USA},
} 

@inproceedings{hannansem,
 author = {Hannan, John},
 title = {Searching for semantics},
 booktitle = {Proceedings of the 1993 ACM SIGPLAN symposium on Partial evaluation and semantics-based program manipulation},
 series = {PEPM '93},
 year = {1993},
 isbn = {0-89791-594-1},
 location = {Copenhagen, Denmark},
 pages = {1--12},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/154630.154631},
 doi = {http://doi.acm.org/10.1145/154630.154631},
 acmid = {154631},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@article{normalform,
 author = {Hoare, C. A. R. and Jifeng, He and Sampaio, A.},
 title = {Normal form approach to compiler design},
 journal = {Acta Inf.},
 volume = {30},
 issue = {9},
 month = {November},
 year = {1993},
 issn = {0001-5903},
 pages = {701--739},
 numpages = {39},
 url = {http://dl.acm.org/citation.cfm?id=178783.178784},
 acmid = {178784},
 publisher = {Springer-Verlag New York, Inc.},
 address = {Secaucus, NJ, USA},
} 

@inproceedings{buthcomp,
 author = {Buth, Bettina and Buth, Karl-Heinz and Fr\"{a}nzle, Martin and Karger, Burghard von and Lakhnech, Yassine and Langmaack, Hans and M\"{u}ller-Olm, Markus},
 title = {Provably Correct Compiler Development and Implementation},
 booktitle = {Proceedings of the 4th International Conference on Compiler Construction},
 series = {CC '92},
 year = {1992},
 isbn = {3-540-55984-1},
 pages = {141--155},
 numpages = {15},
 url = {http://dl.acm.org/citation.cfm?id=647471.727285},
 acmid = {727285},
 publisher = {Springer-Verlag},
 address = {London, UK},
} 

@article{microgypsy,
 author = {Young, W.},
 title = {Verified compilation in micro-{G}ypsy},
 journal = {SIGSOFT Softw. Eng. Notes},
 volume = {14},
 issue = {8},
 month = {November},
 year = {1989},
 issn = {0163-5948},
 pages = {20--26},
 numpages = {7},
 url = {http://doi.acm.org/10.1145/75309.75312},
 doi = {http://doi.acm.org/10.1145/75309.75312},
 acmid = {75312},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@book{polakcomp,
 author = {Polak, Wolfgang},
 title = {Compiler Specification and Verification},
 year = {1981},
 isbn = {0387108866},
 publisher = {Springer-Verlag New York, Inc.},
 address = {Secaucus, NJ, USA},
} 

@inproceedings{morrisadvice,
 author = {Morris, F. Lockwood},
 title = {Advice on structuring compilers and proving them correct},
 booktitle = {Proceedings of the 1st annual ACM SIGACT-SIGPLAN symposium on Principles of programming languages},
 series = {POPL '73},
 year = {1973},
 location = {Boston, Massachusetts},
 pages = {144--152},
 numpages = {9},
 url = {http://doi.acm.org/10.1145/512927.512941},
 doi = {http://doi.acm.org/10.1145/512927.512941},
 acmid = {512941},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@inproceedings{c0comp,
 author = {Leinenbach, Dirk and Paul, Wolfgang and Petrova, Elena},
 title = {Towards the Formal Verification of a {C0} Compiler: Code Generation and Implementation Correctnes},
 booktitle = {Proceedings of the Third IEEE International Conference on Software Engineering and Formal Methods},
 year = {2005},
 isbn = {0-7695-2435-4},
 pages = {2--12},
 numpages = {11},
 url = {http://dl.acm.org/citation.cfm?id=1109722.1110555},
 doi = {10.1109/SEFM.2005.51},
 acmid = {1110555},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
} 

@article{rhodium,
 author = {Lerner, Sorin and Millstein, Todd and Rice, Erika and Chambers, Craig},
 title = {Automated soundness proofs for dataflow analyses and transformations via local rules},
 journal = {SIGPLAN Not.},
 volume = {40},
 issue = {1},
 month = {January},
 year = {2005},
 issn = {0362-1340},
 pages = {364--377},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/1047659.1040335},
 doi = {http://doi.acm.org/10.1145/1047659.1040335},
 acmid = {1040335},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {automated correctness proofs, compiler optimization},
} 

@book{piton,
 author = {Moore, J. Strother},
 title = {Piton: a mechanically verified assembly-level language},
 year = {1996},
 isbn = {0-7923-3920-7},
 publisher = {Kluwer Academic Publishers},
 address = {Norwell, MA, USA},
} 

@article{fassem,
 author = {Morrisett, Greg and Walker, David and Crary, Karl and Glew, Neal},
 title = {From system {F} to typed assembly language},
 journal = {ACM Trans. Program. Lang. Syst.},
 volume = {21},
 issue = {3},
 month = {May},
 year = {1999},
 issn = {0164-0925},
 pages = {527--568},
 numpages = {42},
 url = {http://doi.acm.org/10.1145/319301.319345},
 doi = {http://doi.acm.org/10.1145/319301.319345},
 acmid = {319345},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {certified code, closure conversion, secure extensible systems, type-directed compilation, typed assembly language, typed intermediate languages},
} 

@inproceedings{pcc,
 author = {Necula, George C.},
 title = {Proof-carrying code},
 booktitle = {Proceedings of the 24th ACM SIGPLAN-SIGACT symposium on Principles of programming languages},
 series = {POPL '97},
 year = {1997},
 isbn = {0-89791-853-3},
 location = {Paris, France},
 pages = {106--119},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/263699.263712},
 doi = {http://doi.acm.org/10.1145/263699.263712},
 acmid = {263712},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@inproceedings{neculavalid,
 author = {Necula, George C.},
 title = {Translation validation for an optimizing compiler},
 booktitle = {Proceedings of the ACM SIGPLAN 2000 conference on Programming language design and implementation},
 series = {PLDI '00},
 year = {2000},
 isbn = {1-58113-199-2},
 location = {Vancouver, British Columbia, Canada},
 pages = {83--94},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/349299.349314},
 doi = {http://doi.acm.org/10.1145/349299.349314},
 acmid = {349314},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@inproceedings{transfun,
 author = {Rival, Xavier},
 title = {Symbolic transfer function-based approaches to certified compilation},
 booktitle = {Proceedings of the 31st ACM SIGPLAN-SIGACT symposium on Principles of programming languages},
 series = {POPL '04},
 year = {2004},
 isbn = {1-58113-729-X},
 location = {Venice, Italy},
 pages = {1--13},
 numpages = {13},
 url = {http://doi.acm.org/10.1145/964001.964002},
 doi = {http://doi.acm.org/10.1145/964001.964002},
 acmid = {964002},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {abstract interpretation, certification, compilation, static analysis, translation validation},
} 

@inproceedings{streckerjava,
 author = {Strecker, Martin},
 title = {Formal Verification of a {J}ava Compiler in {I}sabelle},
 booktitle = {Proceedings of the 18th International Conference on Automated Deduction},
 series = {CADE-18},
 year = {2002},
 isbn = {3-540-43931-5},
 pages = {63--77},
 numpages = {15},
 url = {http://dl.acm.org/citation.cfm?id=648238.751554},
 acmid = {751554},
 publisher = {Springer-Verlag},
 address = {London, UK},
} 

@article{compcert,
 author = {Leroy, Xavier},
 title = {A Formally Verified Compiler Back-end},
 journal = {J. Autom. Reason.},
 issue_date = {December  2009},
 volume = {43},
 number = {4},
 month = dec,
 year = {2009},
 issn = {0168-7433},
 pages = {363--446},
 numpages = {84},
 url = {http://dx.doi.org/10.1007/s10817-009-9155-4},
 doi = {10.1007/s10817-009-9155-4},
 acmid = {1666216},
 publisher = {Springer-Verlag New York, Inc.},
 address = {Secaucus, NJ, USA},
 keywords = {Compiler transformations and optimizations, Compiler verification, Formal methods, Program proof, Semantic preservation, The Coq theorem prover},
} 

@book{ahocomp,
 author = {Aho, Alfred V. and Lam, Monica S. and Sethi, Ravi and Ullman, Jeffrey D.},
 title = {Compilers: Principles, Techniques, and Tools (2nd Edition)},
 year = {2006},
 isbn = {0321486811},
 publisher = {Addison-Wesley Longman Publishing Co., Inc.},
 address = {Boston, MA, USA},
} 

@inproceedings{assmannrw,
 author = {A{\ss}mann, Uwe},
 title = {How to Uniformly Specify Program Analysis and Transformation with Graph Rewrite Systems},
 booktitle = {Proceedings of the 6th International Conference on Compiler Construction},
 year = {1996},
 isbn = {3-540-61053-7},
 pages = {121--135},
 numpages = {15},
 url = {http://dl.acm.org/citation.cfm?id=647473.727442},
 acmid = {727442},
 publisher = {Springer-Verlag},
 address = {London, UK},
} 

@inbook{optimix,
 author = {A{\ss}mann, U.},
 title = {OPTIMIX -- a tool for rewriting and optimizing programs},
 book = {Handbook of graph grammars and computing by graph transformation},
 year = {1999},
 isbn = {981-02-4020-1},
 pages = {307--318},
 numpages = {12},
 url = {http://dl.acm.org/citation.cfm?id=328523.328601},
 acmid = {328601},
 publisher = {World Scientific Publishing Co., Inc.},
 address = {River Edge, NJ, USA},
} 

@inbook{boyletrans,
 author = {Boyle, J. M.},
 title = {Abstract programming and program transformation -- an approach to reusing programs},
 book = {Software reusability: vol. 1,  concepts and models},
 year = {1989},
 isbn = {0-201-08017-6},
 pages = {361--413},
 numpages = {53},
 url = {http://dl.acm.org/citation.cfm?id=73103.73118},
 doi = {10.1145/73103.73118},
 acmid = {73118},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@article{clarkemc, 
 author = {Clarke, E. M. and Emerson, E. A. and Sistla, A. P.},
 title = {Automatic verification of finite-state concurrent systems using temporal logic specifications},
 journal = {ACM Trans. Program. Lang. Syst.},
 volume = {8},
 issue = {2},
 month = {April},
 year = {1986},
 issn = {0164-0925},
 pages = {244--263},
 numpages = {20},
 url = {http://doi.acm.org/10.1145/5397.5399},
 doi = {http://doi.acm.org/10.1145/5397.5399},
 acmid = {5399},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@incollection {locales,
   author = {Ballarin, Clemens},
   affiliation = {Fakultät für Informatik, Technische Universität München, 85748 Garching, Germany},
   title = {Locales and Locale Expressions in {Isabelle/Isar}},
   booktitle = {Types for Proofs and Programs},
   series = {Lecture Notes in Computer Science},
   editor = {Berardi, Stefano and Coppo, Mario and Damiani, Ferruccio},
   publisher = {Springer Berlin / Heidelberg},
   isbn = {978-3-540-22164-7},
   keyword = {Computer Science},
   pages = {34-50},
   volume = {3085},
   url = {http://dx.doi.org/10.1007/978-3-540-24849-1\_3},
   note = {10.1007/978-3-540-24849-1\_3},
   year = {2004}
}

@inproceedings{strategycontexts,
 author = {Brihaye, Thomas and Costa, Arnaud and Laroussinie, Fran\c{c}ois and Markey, Nicolas},
 title = {{ATL} with Strategy Contexts and Bounded Memory},
 booktitle = {Proceedings of the 2009 International Symposium on Logical Foundations of Computer Science},
 series = {LFCS '09},
 year = {2009},
 isbn = {978-3-540-92686-3},
 location = {Deerfield Beach, FL},
 pages = {92--106},
 numpages = {15},
 url = {http://dx.doi.org/10.1007/978-3-540-92687-0\_7},
 doi = {http://dx.doi.org/10.1007/978-3-540-92687-0\_7},
 acmid = {1507069},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
}

@inproceedings{ltl,
 author = {Pnueli, Amir},
 title = {The temporal logic of programs},
 booktitle = {Proceedings of the 18th Annual Symposium on Foundations of Computer Science},
 series = {SFCS '77},
 year = {1977},
 pages = {46--57},
 numpages = {12},
 url = {http://dx.doi.org/10.1109/SFCS.1977.32},
 doi = {http://dx.doi.org/10.1109/SFCS.1977.32},
 acmid = {1382534},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
}

@article{vellvm,
 author = {Zhao, Jianzhou and Nagarakatte, Santosh and Martin, Milo M.K. and Zdancewic, Steve},
 title = {Formalizing the {LLVM} intermediate representation for verified program transformations},
 journal = {SIGPLAN Not.},
 issue_date = {January 2012},
 volume = {47},
 number = {1},
 month = jan,
 year = {2012},
 issn = {0362-1340},
 pages = {427--440},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/2103621.2103709},
 doi = {10.1145/2103621.2103709},
 acmid = {2103709},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Coq, LLVM, memory safety},
}   

@article{laceytl,
 author = {Lacey, David and Jones, Neil D. and Van Wyk, Eric and Frederiksen, Carl Christian},
 title = {Compiler Optimization Correctness by Temporal Logic},
 journal = {Higher Order Symbol. Comput.},
 volume = {17},
 issue = {3},
 month = {September},
 year = {2004},
 issn = {1388-3690},
 pages = {173--206},
 numpages = {34},
 url = {http://dl.acm.org/citation.cfm?id=993034.993038},
 doi = {10.1023/B:LISP.0000029444.99264.c0},
 acmid = {993038},
 publisher = {Kluwer Academic Publishers},
 address = {Hingham, MA, USA},
 keywords = {compiler verification, model checking, optimizing compilers, temporal logic},
} 

@article{cobalt,
 author = {Lerner, Sorin and Millstein, Todd and Chambers, Craig},
 title = {Automatically proving the correctness of compiler optimizations},
 journal = {SIGPLAN Not.},
 volume = {38},
 issue = {5},
 month = {May},
 year = {2003},
 issn = {0362-1340},
 pages = {220--231},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/780822.781156},
 doi = {http://doi.acm.org/10.1145/780822.781156},
 acmid = {781156},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {automated correctness proofs, compiler optimization},
} 

@article{cobalt2,
 author = {Lerner, Sorin and Millstein, Todd and Chambers, Craig},
 title = {Cobalt: A Language for Writing Provably-Sound Compiler Optimizations},
 journal = {Electron. Notes Theor. Comput. Sci.},
 issue_date = {May, 2005},
 volume = {132},
 number = {1},
 month = may,
 year = {2005},
 issn = {1571-0661},
 pages = {5--17},
 numpages = {13},
 url = {http://dx.doi.org/10.1016/j.entcs.2005.03.022},
 doi = {10.1016/j.entcs.2005.03.022},
 acmid = {1705782},
 publisher = {Elsevier Science Publishers B. V.},
 address = {Amsterdam, The Netherlands, The Netherlands},
 keywords = {Compiler optimization, automated correctness proofs},
} 

@article{paduaopts,
 author = {Padua, David A. and Wolfe, Michael J.},
 title = {Advanced compiler optimizations for supercomputers},
 journal = {Commun. ACM},
 volume = {29},
 issue = {12},
 month = {December},
 year = {1986},
 issn = {0001-0782},
 pages = {1184--1201},
 numpages = {18},
 url = {http://doi.acm.org/10.1145/7902.7904},
 doi = {http://doi.acm.org/10.1145/7902.7904},
 acmid = {7904},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@inproceedings{coqjvm,
 author = {Atkey, Robert},
 title = {{CoqJVM}: an executable specification of the {J}ava virtual machine using dependent types},
 booktitle = {Proceedings of the 2007 international conference on Types for proofs and programs},
 series = {TYPES'07},
 year = {2008},
 isbn = {3-540-68084-5, 978-3-540-68084-0},
 location = {Cividale del Friuli, Italy},
 pages = {18--32},
 numpages = {15},
 url = {http://dl.acm.org/citation.cfm?id=1786134.1786136},
 acmid = {1786136},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
} 

@inproceedings{decompilation,
 author = {Myreen, Magnus O. and Gordon, Michael J. C. and Slind, Konrad},
 title = {Machine-code verification for multiple architectures: an application of decompilation into logic},
 booktitle = {Proceedings of the 2008 International Conference on Formal Methods in Computer-Aided Design},
 series = {FMCAD '08},
 year = {2008},
 isbn = {978-1-4244-2735-2},
 location = {Portland, Oregon},
 pages = {20:1--20:8},
 articleno = {20},
 numpages = {8},
 url = {http://dl.acm.org/citation.cfm?id=1517424.1517444},
 acmid = {1517444},
 publisher = {IEEE Press},
 address = {Piscataway, NJ, USA},
} 

@article{lambdacomp,
 author = {Chlipala, Adam},
 title = {A certified type-preserving compiler from lambda calculus to assembly language},
 journal = {SIGPLAN Not.},
 issue_date = {June 2007},
 volume = {42},
 issue = {6},
 month = {June},
 year = {2007},
 issn = {0362-1340},
 pages = {54--65},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1273442.1250742},
 doi = {http://doi.acm.org/10.1145/1273442.1250742},
 acmid = {1250742},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {compiler verification, denotational semantics, dependent types, interactive proof assistants},
} 

@article{llvmvalid,
 author = {Tristan, Jean-Baptiste and Govereau, Paul and Morrisett, Greg},
 title = {Evaluating value-graph translation validation for {LLVM}},
 journal = {SIGPLAN Not.},
 issue_date = {June 2011},
 volume = {46},
 issue = {6},
 month = {June},
 year = {2011},
 issn = {0362-1340},
 pages = {295--305},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/1993316.1993533},
 doi = {http://doi.acm.org/10.1145/1993316.1993533},
 acmid = {1993533},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {llvm, optimization, symbolic evaluation, translation validation},
} 

@inproceedings{tatlockext,
 author = {Tatlock, Zachary and Lerner, Sorin},
 title = {Bringing extensibility to verified compilers},
 booktitle = {Proceedings of the 2010 ACM SIGPLAN conference on Programming language design and implementation},
 series = {PLDI '10},
 year = {2010},
 isbn = {978-1-4503-0019-3},
 location = {Toronto, Ontario, Canada},
 pages = {111--121},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/1806596.1806611},
 doi = {http://doi.acm.org/10.1145/1806596.1806611},
 acmid = {1806611},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {compiler optimization, correctness, extensibility},
} 

@inproceedings{licomp,
 author = {Li, Guodong},
 title = {Validated compilation through logic},
 booktitle = {Proceedings of the 17th international conference on Formal methods},
 series = {FM'11},
 year = {2011},
 isbn = {978-3-642-21436-3},
 location = {Limerick, Ireland},
 pages = {169--183},
 numpages = {15},
 url = {http://dl.acm.org/citation.cfm?id=2021296.2021317},
 acmid = {2021317},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
} 

@article{coqparmoves,
 author = {Rideau, Laurence and Serpette, Bernard Paul and Leroy, Xavier},
 title = {Tilting at Windmills with {C}oq: Formal Verification of a Compilation Algorithm for Parallel Moves},
 journal = {J. Autom. Reason.},
 volume = {40},
 issue = {4},
 month = {May},
 year = {2008},
 issn = {0168-7433},
 pages = {307--326},
 numpages = {20},
 url = {http://dl.acm.org/citation.cfm?id=1363304.1363311},
 doi = {10.1007/s10817-007-9096-8},
 acmid = {1363311},
 publisher = {Springer-Verlag New York, Inc.},
 address = {Secaucus, NJ, USA},
 keywords = {Compilation, Compiler correctness, Parallel assignment, Parallel move, The Coq proof assistant},
} 

@article{leroytop,
 author = {Leroy, Xavier},
 title = {Formal verification of a realistic compiler},
 journal = {Commun. ACM},
 issue_date = {July 2009},
 volume = {52},
 issue = {7},
 month = jul,
 year = {2009},
 issn = {0001-0782},
 pages = {107--115},
 numpages = {9},
 url = {http://doi.acm.org/10.1145/1538788.1538814},
 doi = {http://doi.acm.org/10.1145/1538788.1538814},
 acmid = {1538814},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@inproceedings{lirw,
 author = {Li, Guodong and Slind, Konrad},
 title = {Compilation as Rewriting in Higher Order Logic},
 booktitle = {Proceedings of the 21st international conference on Automated Deduction: Automated Deduction},
 series = {CADE-21},
 year = {2007},
 isbn = {978-3-540-73594-6},
 location = {Bremen, Germany},
 pages = {19--34},
 numpages = {16},
 url = {http://dx.doi.org/10.1007/978-3-540-73595-3\_3},
 doi = {http://dx.doi.org/10.1007/978-3-540-73595-3\_3},
 acmid = {1420858},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
} 

@article{tristanvalid,
 author = {Tristan, Jean-Baptiste and Leroy, Xavier},
 title = {Formal verification of translation validators: a case study on instruction scheduling optimizations},
 journal = {SIGPLAN Not.},
 issue_date = {January 2008},
 volume = {43},
 issue = {1},
 month = {January},
 year = {2008},
 issn = {0362-1340},
 pages = {17--27},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/1328897.1328444},
 doi = {http://doi.acm.org/10.1145/1328897.1328444},
 acmid = {1328444},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {scheduling optimizations, the coq proof assistant, translation validation, verified compilers},
} 

@article{compcertmem,
 author = {Leroy, Xavier and Blazy, Sandrine},
 title = {Formal Verification of a {C}-like Memory Model and Its Uses for Verifying Program Transformations},
 journal = {J. Autom. Reason.},
 volume = {41},
 issue = {1},
 month = {July},
 year = {2008},
 issn = {0168-7433},
 pages = {1--31},
 numpages = {31},
 url = {http://dl.acm.org/citation.cfm?id=1388522.1388533},
 doi = {10.1007/s10817-008-9099-0},
 acmid = {1388533},
 publisher = {Springer-Verlag New York, Inc.},
 address = {Secaucus, NJ, USA},
 keywords = {C, Compilation, Compiler correctness, Memory model, Program verification, The Coq proof assistant},
} 

@inproceedings{isabellebug,
 author = {Gesellensetter, Lars and Glesner, Sabine and Salecker, Elke},
 title = {Formal verification with {Isabelle/HOL} in practice: finding a bug in the {GCC} scheduler},
 booktitle = {Proceedings of the 12th international conference on Formal methods for industrial critical systems},
 series = {FMICS'07},
 year = {2008},
 isbn = {3-540-79706-8, 978-3-540-79706-7},
 location = {Berlin, Germany},
 pages = {85--100},
 numpages = {16},
 url = {http://dl.acm.org/citation.cfm?id=1793603.1793613},
 acmid = {1793613},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
} 

@inproceedings{kunduverif,
 author = {Kundu, Sudipta and Tatlock, Zachary and Lerner, Sorin},
 title = {Proving optimizations correct using parameterized program equivalence},
 booktitle = {Proceedings of the 2009 ACM SIGPLAN conference on Programming language design and implementation},
 series = {PLDI '09},
 year = {2009},
 isbn = {978-1-60558-392-1},
 location = {Dublin, Ireland},
 pages = {327--337},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/1542476.1542513},
 doi = {http://doi.acm.org/10.1145/1542476.1542513},
 acmid = {1542513},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {compiler optimization, correctness, translation validation},
} 

@inproceedings{gcminor,
 author = {McCreight, Andrew and Chevalier, Tim and Tolmach, Andrew},
 title = {A certified framework for compiling and executing garbage-collected languages},
 booktitle = {Proceedings of the 15th ACM SIGPLAN international conference on Functional programming},
 series = {ICFP '10},
 year = {2010},
 isbn = {978-1-60558-794-3},
 location = {Baltimore, Maryland, USA},
 pages = {273--284},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1863543.1863584},
 doi = {http://doi.acm.org/10.1145/1863543.1863584},
 acmid = {1863584},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {certified compilation, garbage collection, haskell compilation, program proof, the coq theorem prover},
} 

@inproceedings{changetheworld,
 author = {Sheard, Tim and Stump, Aaron and Weirich, Stephanie},
 title = {Language-based verification will change the world},
 booktitle = {Proceedings of the FSE/SDP workshop on Future of software engineering research},
 series = {FoSER '10},
 year = {2010},
 isbn = {978-1-4503-0427-6},
 location = {Santa Fe, New Mexico, USA},
 pages = {343--348},
 numpages = {6},
 url = {http://doi.acm.org/10.1145/1882362.1882432},
 doi = {http://doi.acm.org/10.1145/1882362.1882432},
 acmid = {1882432},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {dependently typed programming, language-based verification},
} 

@inproceedings{cpsverif,
 author = {Dargaye, Zaynah and Leroy, Xavier},
 title = {Mechanized verification of {CPS} transformations},
 booktitle = {Proceedings of the 14th international conference on Logic for programming, artificial intelligence and reasoning},
 series = {LPAR'07},
 year = {2007},
 isbn = {3-540-75558-6, 978-3-540-75558-6},
 location = {Yerevan, Armenia},
 pages = {211--225},
 numpages = {15},
 url = {http://dl.acm.org/citation.cfm?id=1779419.1779436},
 acmid = {1779436},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
} 

@inproceedings{vst,
 author = {Appel, Andrew W.},
 title = {Verified software toolchain},
 booktitle = {Proceedings of the 20th European conference on Programming languages and systems: part of the joint European conferences on theory and practice of software},
 series = {ESOP'11/ETAPS'11},
 year = {2011},
 isbn = {978-3-642-19717-8},
 location = {Saarbr\&\#252;cken, Germany},
 pages = {1--17},
 numpages = {17},
 url = {http://dl.acm.org/citation.cfm?id=1987211.1987212},
 acmid = {1987212},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
} 

@article{c0verif,
 author = {Leinenbach, Dirk and Petrova, Elena},
 title = {Pervasive Compiler Verification -- From Verified Programs to Verified Systems},
 journal = {Electron. Notes Theor. Comput. Sci.},
 volume = {217},
 month = {July},
 year = {2008},
 issn = {1571-0661},
 pages = {23--40},
 numpages = {18},
 url = {http://dl.acm.org/citation.cfm?id=1390859.1390957},
 doi = {10.1016/j.entcs.2008.06.040},
 acmid = {1390957},
 publisher = {Elsevier Science Publishers B. V.},
 address = {Amsterdam, The Netherlands, The Netherlands},
 keywords = {Compiler Verification, HOL, Hoare Logic, System Verification, Theorem Proving},
} 

@article{regbug,
 author = {Huang, Yuqiang and Childers, Bruce R. and Soffa, Mary Lou},
 title = {Detecting bugs in register allocation},
 journal = {ACM Trans. Program. Lang. Syst.},
 issue_date = {April 2010},
 volume = {32},
 issue = {4},
 month = {April},
 year = {2010},
 issn = {0164-0925},
 pages = {15:1--15:36},
 articleno = {15},
 numpages = {36},
 url = {http://doi.acm.org/10.1145/1734206.1734212},
 doi = {http://doi.acm.org/10.1145/1734206.1734212},
 acmid = {1734212},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Register allocation},
} 

@article{socialverif,
 author = {Asperti, Andrea and Geuvers, Herman and Natarajan, Raja},
 title = {Social processes, program verification and all that},
 journal = {Mathematical. Structures in Comp. Sci.},
 volume = {19},
 issue = {5},
 month = {October},
 year = {2009},
 issn = {0960-1295},
 pages = {877--896},
 numpages = {20},
 url = {http://dl.acm.org/citation.cfm?id=1630585.1630586},
 doi = {10.1017/S0960129509990041},
 acmid = {1630586},
 publisher = {Cambridge University Press},
 address = {New York, NY, USA},
}

@inproceedings{transssa,
 author = {Mansky, William and Gunter, Elsa},
 title = {A framework for formal verification of compiler optimizations},
 booktitle = {Proceedings of the First international conference on Interactive Theorem Proving},
 series = {ITP'10},
 year = {2010},
 isbn = {3-642-14051-3, 978-3-642-14051-8},
 location = {Edinburgh, UK},
 pages = {371--386},
 numpages = {16},
 url = {http://dx.doi.org/10.1007/978-3-642-14052-5\_26},
 doi = {10.1007/978-3-642-14052-5\_26},
 acmid = {2176757},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
 keywords = {optimizing compilers, program transformations, temporal logic, theorem proving},
} 

@phdthesis{oheimbjava, 
author = {Oheimb, David von}, title = {Analyzing {J}ava in {Isabelle/HOL}: \textit{Formalization, Type Safety and {H}oare Logic}}, school = {Technische Universit\"{a}t M\"{u}nchen}, year = 2001, CRClassification = {D.2.4, D.3.1, F.3.1}, CRGenTerms = {Languages, Verification, Theory}, keywords = {Java, formalization, operational semantics, type soundness, axiomatic semantics, Isabelle/HOL}, note = {\url{http://ddvo.net/diss/}}}

@article{javahoare, author = {David von Oheimb}, title = {Hoare Logic for {J}ava in {Isabelle/HOL}}, journal = {Concurrency and Computation: Practice and Experience}, editor = {Eisenbach, S. and Leavens, G. T.}, year = {2001}, volume = 13, number = 13, pages = {1173--1214}}

@inproceedings{transbugs,
  author = {Kalvala, Sara and Warburton, Richard},
  editor = {da Silva Simão, Adenilso and Morgan, Carroll},
  booktitle = {SBMF},
  interhash = {c7475ccc5bb9d03a37dabd6266722646},
  intrahash = {5ae12b6e5d86834eaa7a08df962fb5ea},
  pages = {172-187},
  publisher = {Springer},
  series = {Lecture Notes in Computer Science},
  title = {A Formal Approach to Fixing Bugs.},
  url = {http://dblp.uni-trier.de/db/conf/sbmf/sbmf2011.html\#KalvalaW11},
  volume = 7021,
  year = 2011,
  timestamp = {2011-11-17T00:00:00.000+0100},
  keywords = {dblp},
  ee = {http://dx.doi.org/10.1007/978-3-642-25032-3_12},
  added-at = {2011-11-17T00:00:00.000+0100},
  isbn = {978-3-642-25031-6},
  biburl = {http://www.bibsonomy.org/bibtex/25ae12b6e5d86834eaa7a08df962fb5ea/dblp}
}

@article{koverview,
  title={An Overview of the {K} Semantic Framework},
  author={Grigore Ro{\c s}u and Traian Florin {\c S}erb{\u a}nu{\c t}{\u a} },
  journal={Journal of Logic and Algebraic Programming},
  volume={79},
  number={6},
  pages={397--434},
  year={2010},
  ee={http://dx.doi.org/10.1016/j.jlap.2010.03.012},
  doi={10.1016/j.jlap.2010.03.012},
}

@InProceedings{kcsem,
author = "Chucky Ellison and Grigore Ro{\c s}u",
title = "An Executable Formal Semantics of {C} with Applications",
booktitle = "Proceedings of the 39th Symposium on Principles of Programming Languages (POPL'12)",
year = "2012",
note = "To appear",
}

@techreport{matchlog, 
author = "Grigore Ro\c{s}u and Andrei \c{S}tef\u{a}nescu", 
institution={University of Illinois}, 
number={http://hdl.handle.net/2142/28357}, 
title = "Matching Logic Rewriting: Unifying Operational and Axiomatic Semantics in a Practical and Generic Framework",
month = "November", 
year = "2011", 
}

@techreport{c99,
  author = {ISO},
  editor = {WG14},
  interhash = {fd8756a3957faf0ec6a78712ab07b4d7},
  intrahash = {2923115ad6638e5e63eda4ac81370a76},
  note = {ISO/IEC 9899:1999 draft},
  title = {ISO C Standard 1999},
  url = {http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1124.pdf},
  year = 1999,
  timestamp = {2007-02-10T16:23:05.000+0100},
  keywords = {c c99 iso standard},
  added-at = {2007-02-10T16:23:05.000+0100},
  description = {C Language ISO 1999},
  biburl = {http://www.bibsonomy.org/bibtex/22923115ad6638e5e63eda4ac81370a76/mobileink},
  abstract = {This is the "combined C99 + TC1 + TC2, WG14 N1124, dated 2005-05-06. This is a WG14 working paper, but it reflects the consolidated standard at the time of issue."}
}

@online{coq,
title = {The Coq Proof Assistant Reference Manual (Version 8.5)},
author = {The Coq Development Team},
year = 2016,
url = {https://coq.inria.fr/refman/}
}

@online{ghc,
  author = {Simon Marlow},
  title = {The {Glasgow Haskell Compiler}},
  year = 2011,
  url = {http://www.haskell.org/ghc}
}

@inproceedings{haskellpar,
 author = {Jones, Simon Peyton and Singh, Satnam},
 title = {A tutorial on parallel and concurrent programming in {H}askell},
 booktitle = {Proceedings of the 6th international conference on Advanced functional programming},
 series = {AFP'08},
 year = {2009},
 isbn = {3-642-04651-7, 978-3-642-04651-3},
 location = {Heijen, The Netherlands},
 pages = {267--305},
 numpages = {39},
 url = {http://dl.acm.org/citation.cfm?id=1813347.1813353},
 acmid = {1813353},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
} 

@book{haskell,
 author = {Thompson, Simon},
 title = {Haskell: The Craft of Functional Programming},
 year = {1999},
 isbn = {0201342758},
 edition = {2nd},
 publisher = {Addison-Wesley Longman Publishing Co., Inc.},
 address = {Boston, MA, USA},
} 

@inproceedings{llvmghc,
 author = {Terei, David A. and Chakravarty, Manuel M.T.},
 title = {An {LLVM} backend for {GHC}},
 booktitle = {Proceedings of the third {ACM} Haskell symposium on Haskell},
 series = {Haskell '10},
 year = {2010},
 isbn = {978-1-4503-0252-4},
 location = {Baltimore, Maryland, USA},
 pages = {109--120},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1863523.1863538},
 doi = {http://doi.acm.org/10.1145/1863523.1863538},
 acmid = {1863538},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {backend, ghc, llvm},
} 

@inproceedings{llvm,
 author = {Lattner, Chris and Adve, Vikram},
 title = {{LLVM}: A Compilation Framework for Lifelong Program Analysis \& Transformation},
 booktitle = {Proceedings of the international symposium on Code generation and optimization: feedback-directed and runtime optimization},
 series = {CGO '04},
 year = {2004},
 isbn = {0-7695-2102-9},
 location = {Palo Alto, California},
 pages = {75--},
 url = {http://dl.acm.org/citation.cfm?id=977395.977673},
 acmid = {977673},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
}

@online{clang,
  author = {},
  title = {{c}lang: a {C} language family frontend for {LLVM}},
  year = 2011,
  url = {http://clang.llvm.org}
}

 @article{ogrg,
 author = {Owicki, Susan and Gries, David},
 title = {Verifying properties of parallel programs: an axiomatic approach},
 journal = {Commun. ACM},
 volume = {19},
 issue = {5},
 month = {May},
 year = {1976},
 issn = {0001-0782},
 pages = {279--285},
 numpages = {7},
 url = {http://doi.acm.org/10.1145/360051.360224},
 doi = {http://doi.acm.org/10.1145/360051.360224},
 acmid = {360224},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {concurrent processes, correctness proofs, deadlock, mutual exclusion, program verification, structured multiprogramming, synchronization},
} 

@inproceedings{vstcsl,
 author = {Hobor, Aquinas and Appel, Andrew W. and Nardelli, Francesco Zappa},
 title = {Oracle semantics for concurrent separation logic},
 booktitle = {Proceedings of the Theory and practice of software, 17th European conference on Programming languages and systems},
 series = {ESOP'08/ETAPS'08},
 year = {2008},
 isbn = {3-540-78738-0, 978-3-540-78738-9},
 location = {Budapest, Hungary},
 pages = {353--367},
 numpages = {15},
 url = {http://dl.acm.org/citation.cfm?id=1792878.1792914},
 acmid = {1792914},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
} 

@inproceedings{pvsvalid,
 author = {Kanade, Aditya and Sanyal, Amitabha and Khedker, Uday},
 title = {A {PVS} Based Framework for Validating Compiler Optimizations},
 booktitle = {Proceedings of the Fourth IEEE International Conference on Software Engineering and Formal Methods},
 year = {2006},
 isbn = {0-7695-2678-0},
 pages = {108--117},
 numpages = {10},
 url = {http://dl.acm.org/citation.cfm?id=1158333.1158356},
 doi = {10.1109/SEFM.2006.4},
 acmid = {1158356},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
} 

@inproceedings{holml,
 author = {Inwegen, Myra Van and Gunter, Elsa L.},
 title = {{HOL-ML}},
 booktitle = {Proceedings of the 6th International Workshop on Higher Order Logic Theorem Proving and its Applications},
 year = {1994},
 isbn = {3-540-57826-9},
 pages = {61--74},
 numpages = {14},
 url = {http://dl.acm.org/citation.cfm?id=646520.694367},
 acmid = {694367},
 publisher = {Springer-Verlag},
 address = {London, UK},
} 

@inproceedings{holmlmodule,
 author = {Maharaj, Savi and Gunter, Elsa L.},
 title = {Studying the {ML} Module System in {HOL}},
 booktitle = {Proceedings of the 7th International Workshop on Higher Order Logic Theorem Proving and Its Applications},
 year = {1994},
 isbn = {3-540-58450-1},
 pages = {346--361},
 numpages = {16},
 url = {http://dl.acm.org/citation.cfm?id=646521.759249},
 acmid = {759249},
 publisher = {Springer-Verlag},
 address = {London, UK},
} 


@article{CGB2008,
  author = {A. Compagnoni and  Elsa L. Gunter and Phillippe Bidinger},
  title = {Role-based access control for boxed ambients},
  journal = {Theoretical Computer Science},
  volume = { 398},
  number = {1-3},
  pages = {203-216},
  year ={2008}
  }

@InProceedings{GY2008,
 author = {Elsa L. Gunter and Ayesha Yasmeen},
 title={Secure Broadcast Ambients},
 booktitle = {FAST},
 year = {2008},
 note={LNCS proceedings to appear}
 }

@InProceedings{CG2005a,
  author={Adriana Compagnoni and Elsa Gunter},
  title={Types for security in a mobile world},
  booktitle={ Symposium on Trustworthy Global Computing (TGC)},
  address={Edinburgh, UK},
  month={April},
  year={2005},
  pages ={75-97}}

@article{CG2005,
  author={Eduardo Bonelli and Adriana Compagnoni and Elsa Gunter},
  title={ Correspondence Assertions for Process Synchronization in Concurrent
Communications}, journal={Journal of Functional Programming},
  volume ={15},
  number={2},
  pages={219-247},
  month={March},
  year={2005},
  url ={http://www.cs.stevens-tech.edu/~abc/publications/JFP-LBS.pdf}
}

@article{BCG2005,
  author={Eduardo Bonelli and Adriana Compagnoni and Elsa Gunter},
  title={Typechecking safe process synchronization},
  journal={Electronic Notes in Theoretical Computer Science}, volume={138},number={1},pages={3-22},
  year={2005},
  url={http://www.cs.stevens-tech.edu/~abc/publications/fguc04.pdf}
}

@inproceedings{DBLP:conf/issta/YasmeenG11,
  author    = {Ayesha Yasmeen and
               Elsa L. Gunter},
  title     = {Automated framework for formal operator task analysis},
  booktitle = {ISSTA},
  year      = {2011},
  pages     = {78-88},
  ee        = {http://doi.acm.org/10.1145/2001420.2001430},
  crossref  = {DBLP:conf/issta/2011},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}
@proceedings{DBLP:conf/issta/2011,
  editor    = {Matthew B. Dwyer and
               Frank Tip},
  title     = {Proceedings of the 20th International Symposium on Software
               Testing and Analysis, ISSTA 2011, Toronto, ON, Canada, July
               17-21, 2011},
  booktitle = {ISSTA},
  publisher = {ACM},
  year      = {2011},
  isbn      = {978-1-4503-0562-4},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@inproceedings{DBLP:conf/smc/BassBFGGMR11,
  author    = {Ellen J. Bass and
               Matthew L. Bolton and
               Karen Feigh and
               Dennis Griffith and
               Elsa L. Gunter and
               William Mansky and
               John Rushby},
  title     = {Toward a multi-method approach to formalizing human-automation
               interaction and human-human communications},
  booktitle = {SMC},
  year      = {2011},
  pages     = {1817-1824},
  ee        = {http://dx.doi.org/10.1109/ICSMC.2011.6083935},
  crossref  = {DBLP:conf/smc/2011},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}
@proceedings{DBLP:conf/smc/2011,
  title     = {Proceedings of the IEEE International Conference on Systems,
               Man and Cybernetics, Anchorage, Alaska, USA, October 9-12,
               2011},
  booktitle = {SMC},
  publisher = {IEEE},
  year      = {2011},
  isbn      = {978-1-4577-0652-3},
  ee        = {http://ieeexplore.ieee.org/xpl/mostRecentIssue.jsp?punumber=6070513},
  bibsource = {DBLP, http://dblp.uni-trier.de}}

@inproceedings{DBLP:conf/smc/YasmeenG11,
  author    = {Ayesha Yasmeen and
               Elsa L. Gunter},
  title     = {Robustness for protection envelopes with respect to human
               task variation},
  booktitle = {SMC},
  year      = {2011},
  pages     = {1809-1816},
  ee        = {http://dx.doi.org/10.1109/ICSMC.2011.6083934},
  crossref  = {DBLP:conf/smc/2011},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@inproceedings{csl,
 author = {Hobor, Aquinas and Appel, Andrew W. and Nardelli, Francesco Zappa},
 title = {Oracle semantics for concurrent separation logic},
 booktitle = {Proceedings of the Theory and practice of software, 17th European conference on Programming languages and systems},
 series = {ESOP'08/ETAPS'08},
 year = {2008},
 isbn = {3-540-78738-0, 978-3-540-78738-9},
 location = {Budapest, Hungary},
 pages = {353--367},
 numpages = {15},
 url = {http://dl.acm.org/citation.cfm?id=1792878.1792914},
 acmid = {1792914},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
} 

@article{csmith,
 author = {Yang, Xuejun and Chen, Yang and Eide, Eric and Regehr, John},
 title = {Finding and understanding bugs in {C} compilers},
 journal = {SIGPLAN Not.},
 issue_date = {June 2011},
 volume = {46},
 number = {6},
 month = jun,
 year = {2011},
 issn = {0362-1340},
 pages = {283--294},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1993316.1993532},
 doi = {10.1145/1993316.1993532},
 acmid = {1993532},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {automated testing, compiler defect, compiler testing, random program generation, random testing},
} 

@inproceedings{rgsim,
 author = {Liang, Hongjin and Feng, Xinyu and Fu, Ming},
 title = {A rely-guarantee-based simulation for verifying concurrent program transformations},
 booktitle = {Proceedings of the 39th annual ACM SIGPLAN-SIGACT symposium on Principles of programming languages},
 series = {POPL '12},
 year = {2012},
 isbn = {978-1-4503-1083-3},
 location = {Philadelphia, PA, USA},
 pages = {455--468},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/2103656.2103711},
 doi = {10.1145/2103656.2103711},
 acmid = {2103711},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {concurrency, program transformation, rely-guarantee reasoning, simulation},
} 

@article{listinf,
  author  = {David Trachtenherz},
  title   = {Infinite Lists},
  journal = {Archive of Formal Proofs},
  month   = feb,
  year    = 2011,
  note    = {\url{http://afp.sf.net/entries/List-Infinite.shtml},
            Formal proof development},
  ISSN    = {2150-914x},
}

@inproceedings{isabellerg,
 author = {Nieto, Leonor Prensa},
 title = {The rely-guarantee method in {Isabelle/HOL}},
 booktitle = {Proceedings of the 12th European conference on Programming},
 series = {ESOP'03},
 year = {2003},
 isbn = {3-540-00886-1},
 location = {Warsaw, Poland},
 pages = {348--362},
 numpages = {15},
 url = {http://dl.acm.org/citation.cfm?id=1765712.1765738},
 acmid = {1765738},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
} 

@article{tcfg,
 author = {Krinke, Jens},
 title = {{Context-sensitive slicing of concurrent programs}},
 journal = {{SIGSOFT} Softw. Eng. Notes},
 issue_date = {September 2003},
 volume = {28},
 number = {5},
 month = sep,
 year = {2003},
 issn = {0163-5948},
 pages = {178--187},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/949952.940096},
 doi = {10.1145/949952.940096},
 acmid = {940096},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {concurrency, context-sensitive, parallelism, program analysis, program slicing},
} 

@INPROCEEDINGS{glabbeek,
    author = {R.J. van Glabbeek},
    title = {{The Linear Time-Branching Time Spectrum I - The Semantics of Concrete, Sequential Processes}},
    booktitle = {Handbook of Process Algebra, chapter 1},
    year = {1990},
    pages = {3--99},
    publisher = {Elsevier}
}

@inproceedings{trueconc,
  author    = {Glynn Winskel},
  title     = {Event Structure Semantics for CCS and Related Languages},
  booktitle = {ICALP},
  year      = {1982},
  pages     = {561-576},
  ee        = {http://dx.doi.org/10.1007/BFb0012800},
  crossref  = {DBLP:conf/icalp/1982},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@article{mutex,
 author = {Dijkstra, E. W.},
 title = {Solution of a problem in concurrent programming control},
 journal = {Commun. ACM},
 issue_date = {Sept. 1965},
 volume = {8},
 number = {9},
 month = sep,
 year = {1965},
 issn = {0001-0782},
 pages = {569--},
 url = {http://doi.acm.org/10.1145/365559.365617},
 doi = {10.1145/365559.365617},
 acmid = {365617},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@incollection {milnerobs,
   author = {Hennessy, Matthew and Milner, Robin},
   affiliation = {University of Edinburgh UK UK},
   title = {On observing nondeterminism and concurrency},
   booktitle = {Automata, Languages and Programming},
   series = {Lecture Notes in Computer Science},
   editor = {de Bakker, Jaco and van Leeuwen, Jan},
   publisher = {Springer Berlin / Heidelberg},
   isbn = {978-3-540-10003-4},
   keyword = {Computer Science},
   pages = {299-309},
   volume = {85},
   url = {http://dx.doi.org/10.1007/3-540-10003-2\_79},
   note = {10.1007/3-540-10003-2\_79},
   year = {1980}
}

@inproceedings{coqcps,
 author = {Dargaye, Zaynah and Leroy, Xavier},
 title = {Mechanized verification of CPS transformations},
 booktitle = {Proceedings of the 14th international conference on Logic for programming, artificial intelligence and reasoning},
 series = {LPAR'07},
 year = {2007},
 isbn = {3-540-75558-6, 978-3-540-75558-6},
 location = {Yerevan, Armenia},
 pages = {211--225},
 numpages = {15},
 url = {http://dl.acm.org/citation.cfm?id=1779419.1779436},
 acmid = {1779436},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
} 

@article{chlipalacomp,
 author = {Chlipala, Adam},
 title = {A verified compiler for an impure functional language},
 journal = {SIGPLAN Not.},
 issue_date = {January 2010},
 volume = {45},
 number = {1},
 month = jan,
 year = {2010},
 issn = {0362-1340},
 pages = {93--106},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/1707801.1706312},
 doi = {10.1145/1707801.1706312},
 acmid = {1706312},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {compiler verification, interactive proof assistants},
} 

@article{conccompcert,
 author = {\^{S}ev\v{c}ik, Jaroslav and Vafeiadis, Viktor and Zappa Nardelli, Francesco and Jagannathan, Suresh and Sewell, Peter},
 title = {Relaxed-memory concurrency and verified compilation},
 journal = {SIGPLAN Not.},
 issue_date = {January 2011},
 volume = {46},
 number = {1},
 month = jan,
 year = {2011},
 issn = {0362-1340},
 pages = {43--54},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1925844.1926393},
 doi = {10.1145/1925844.1926393},
 acmid = {1926393},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {relaxed memory models, semantics, verifying compilation},
} 

@inproceedings{ctsofenceopt,
 author = {Vafeiadis, Viktor and Nardelli, Francesco Zappa},
 title = {Verifying fence elimination optimisations},
 booktitle = {Proceedings of the 18th international conference on Static analysis},
 series = {SAS'11},
 year = {2011},
 isbn = {978-3-642-23701-0},
 location = {Venice, Italy},
 pages = {146--162},
 numpages = {17},
 url = {http://dl.acm.org/citation.cfm?id=2041552.2041566},
 acmid = {2041566},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
} 

@article{memorymodels,
 author = {McKenney, Paul E.},
 title = {Memory ordering in modern microprocessors, Part I},
 journal = {Linux J.},
 issue_date = {August 2005},
 volume = {2005},
 number = {136},
 month = aug,
 year = {2005},
 issn = {1075-3583},
 pages = {2--},
 url = {http://dl.acm.org/citation.cfm?id=1080072.1080074},
 acmid = {1080074},
 publisher = {Belltown Media},
 address = {Houston, TX},
} 

@article{jinja,author={Gerwin Klein and Tobias Nipkow},
title={A Machine-Checked Model for a {Java}-Like Language, Virtual Machine and Compiler},
journal=TOPLAS,volume = {28}, number = {4}, year = {2006}, pages = {619--695},
doi = {http://doi.acm.org/10.1145/1146809.1146811}}

@inproceedings{x86tso,
 author = {Owens, Scott and Sarkar, Susmit and Sewell, Peter},
 title = {A Better x86 Memory Model: {x86-TSO}},
 booktitle = {Proceedings of the 22nd International Conference on Theorem Proving in Higher Order Logics},
 series = {TPHOLs '09},
 year = {2009},
 isbn = {978-3-642-03358-2},
 location = {Munich, Germany},
 pages = {391--407},
 numpages = {17},
 doi = {10.1007/978-3-642-03359-9_27},
 acmid = {1616107},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
} 

@article{drfopts,
 author = {\v{S}ev\v{c}\'{\i}k, Jaroslav},
 title = {Safe optimisations for shared-memory concurrent programs},
 journal = {SIGPLAN Not.},
 issue_date = {June 2011},
 volume = {46},
 number = {6},
 month = jun,
 year = {2011},
 issn = {0362-1340},
 pages = {306--316},
 numpages = {11},
 doi = {10.1145/1993316.1993534},
 acmid = {1993534},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {compiler optimizations, relaxed memory models, semantics},
} 

@article{vellvmssa,
 author = {Zhao, Jianzhou and Nagarakatte, Santosh and Martin, Milo M.K. and Zdancewic, Steve},
 title = {Formal verification of {SSA}-based optimizations for {LLVM}},
 journal = {SIGPLAN Not.},
 issue_date = {June 2013},
 volume = {48},
 number = {6},
 month = jun,
 year = {2013},
 issn = {0362-1340},
 pages = {175--186},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2499370.2462164},
 doi = {10.1145/2499370.2462164},
 acmid = {2462164},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {coq, llvm, single static assignment},
} 

@incollection{foctl,
year={1998},
isbn={978-3-540-65384-4},
booktitle={Foundations of Software Technology and Theoretical Computer Science},
volume={1530},
series={Lecture Notes in Computer Science},
editor={Arvind, Vikraman and Ramanujam, Sundar},
doi={10.1007/978-3-540-49382-2\_27},
title={First-Order-CTL Model Checking},
url={http://dx.doi.org/10.1007/978-3-540-49382-2\_27},
publisher={Springer Berlin Heidelberg},
author={Bohn, J{\"u}rgen and Damm, Werner and Grumberg, Orna and Hungar, Hardi and Laster, Karen},
pages={283-294}
}

@MISC{logiccomp,
    author = {He Jifeng and Jonathan P. Bowen},
    title = {Specification, Verification and Prototyping of an Optimized Compiler},
    year = {1994}
}

@incollection{z3,
year={2008},
isbn={978-3-540-78799-0},
booktitle={Tools and Algorithms for the Construction and Analysis of Systems},
volume={4963},
series={Lecture Notes in Computer Science},
editor={Ramakrishnan, C.R. and Rehof, Jakob},
doi={10.1007/978-3-540-78800-3\_24},
title={Z3: An Efficient SMT Solver},
url={http://dx.doi.org/10.1007/978-3-540-78800-3\_24},
publisher={Springer Berlin Heidelberg},
author={Moura, Leonardo and Bj{\o}rner, Nikolaj},
pages={337-340}
}

@inproceedings{jinjathreads,
 author = {Lochbihler, Andreas},
 title = {{Verifying a Compiler for Java Threads}},
 booktitle = {Proceedings of the 19th European Conference on Programming Languages and Systems},
 series = {ESOP'10},
 year = {2010},
 isbn = {3-642-11956-5, 978-3-642-11956-9},
 location = {Paphos, Cyprus},
 pages = {427--447},
 numpages = {21},
 url = {http://dx.doi.org/10.1007/978-3-642-11957-6_23},
 doi = {10.1007/978-3-642-11957-6_23},
 acmid = {2175509},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
} 

@book{coqbook,
 author = {Bertot, Yves and Casteran, Pierre},
 title = {Interactive Theorem Proving and Program Development},
 year = {2004},
 isbn = {3540208542},
 publisher = {SpringerVerlag},
}

@article{babyil,
 author = {Gordon, Andrew D. and Syme, Don},
 title = {Typing a Multi-language Intermediate Code},
 journal = {SIGPLAN Not.},
 issue_date = {March 2001},
 volume = {36},
 number = {3},
 month = jan,
 year = {2001},
 issn = {0362-1340},
 pages = {248--260},
 numpages = {13},
 url = {http://doi.acm.org/10.1145/373243.360228},
 doi = {10.1145/373243.360228},
 acmid = {360228},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@Book{cil,
  author =	"{ECMA}",
  title =	"{ECMA-335}: {Common Language Infrastructure (CLI)}",
  publisher =	"ECMA (European Association for Standardizing
		 Information and Communication Systems)",
  address =	"pub-ECMA:adr",
  month =	dec,
  year = 	"2001",
  pages =	"xiii + 479",
  bibdate =	"Sat May 08 07:36:41 2010",
  bibsource =	"http://www.ecma-international.org/publications/standards/Standard.htm",
  URL =  	"http://www.ecma.ch/ecma1/STAND/ecma-335.htm",
  acknowledgement = "Nelson H. F. Beebe, University of Utah, Department
		 of Mathematics, 110 LCB, 155 S 1400 E RM 233, Salt Lake
		 City, UT 84112-0090, USA, Tel: +1 801 581 5254, FAX: +1
		 801 581 4148, e-mail: \path|beebe@math.utah.edu|,
		 \path|beebe@acm.org|, \path|beebe@computer.org|
		 (Internet), URL:
		 \path|http://www.math.utah.edu/~beebe/|",
  ecmanumber =	"ECMA-335",
  remark =	"Also ISO/IEC 23271.",
}

@article{stackopt,
 author = {Saabas, Ando and Uustalu, Tarmo},
 title = {Type Systems for Optimizing Stack-based Code},
 journal = {Electron. Notes Theor. Comput. Sci.},
 issue_date = {July, 2007},
 volume = {190},
 number = {1},
 month = jul,
 year = {2007},
 issn = {1571-0661},
 pages = {103--119},
 numpages = {17},
 url = {http://dx.doi.org/10.1016/j.entcs.2007.02.063},
 doi = {10.1016/j.entcs.2007.02.063},
 acmid = {1280356},
 publisher = {Elsevier Science Publishers B. V.},
 address = {Amsterdam, The Netherlands, The Netherlands},
 keywords = {bidirectional analyses, certification, data-flow analyses, optimization soundness, optimizations, stack-based low-level languages, type systems},
} 

@MISC{sutl,
    author = {Y. S. Ramakrishna and L.E. Moser and L. K. Dillon and P.M. Melliar-Smith and G. Kutty},
    title = {An Automata-Theoretic Decision Procedure for Propositional Temporal Logic with Since and Until},
    year = {1992}
}

@article{conccsmith,
 author = {Morisset, Robin and Pawan, Pankaj and Zappa Nardelli, Francesco},
 title = {{Compiler Testing via a Theory of Sound Optimisations in the C11/C++11 Memory Model}},
 journal = {SIGPLAN Not.},
 issue_date = {June 2013},
 volume = {48},
 number = {6},
 month = jun,
 year = {2013},
 issn = {0362-1340},
 pages = {187--196},
 numpages = {10},
 doi = {10.1145/2499370.2491967},
 acmid = {2491967},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {c11/c++11 memory model, compiler testing},
} 

@article{simplify,
 author = {Nelson, Greg and Oppen, Derek C.},
 title = {Simplification by Cooperating Decision Procedures},
 journal = {ACM Trans. Program. Lang. Syst.},
 issue_date = {Oct. 1979},
 volume = {1},
 number = {2},
 month = oct,
 year = {1979},
 issn = {0164-0925},
 pages = {245--257},
 numpages = {13},
 url = {http://doi.acm.org/10.1145/357073.357079},
 doi = {10.1145/357073.357079},
 acmid = {357079},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@ARTICLE{execspec,
author={Fuchs, N.E.},
journal={Software Engineering Journal},
title={Specifications are (preferably) executable},
year={1992},
month={Sep},
volume={7},
number={5},
pages={323-334},
keywords={formal specification;specification languages;declarative specification languages;executable specifications;expressiveness;high expressiveness;non-executable formal specifications;specification languages;user requirements;validation task},
ISSN={0268-6961},}

@inproceedings{graphite,
 author = {Mansky, William and Griffith, Dennis and Gunter, Elsa L.},
 title = {Specifying and Executing Optimizations for Parallel Programs},
 booktitle = {GRAPHITE 2014},
 year = {2014},
 publisher = {Forthcoming},
 }

@MISC{sos,
    author = {G. D. Plotkin},
    title = {A Structural Approach to Operational Semantics},
    year = {1981}
}

@inproceedings{natural,
  author    = {Gilles Kahn},
  title     = {Natural Semantics},
  booktitle = {STACS},
  year      = {1987},
  pages     = {22-39},
  ee        = {http://dx.doi.org/10.1007/BFb0039592},
  crossref  = {DBLP:conf/stacs/1987},
  bibsource = {DBLP, http://dblp.uni-trier.de}
}

@book{csp,
 author = {Hoare, C. A. R.},
 title = {Communicating Sequential Processes},
 year = {1985},
 isbn = {0-13-153271-5},
 publisher = {Prentice-Hall, Inc.},
 address = {Upper Saddle River, NJ, USA},
} 

@incollection{rgtl,
year={2012},
isbn={978-3-642-32346-1},
booktitle={Interactive Theorem Proving},
volume={7406},
series={Lecture Notes in Computer Science},
editor={Beringer, Lennart and Felty, Amy},
doi={10.1007/978-3-642-32347-8_20},
title={Using Locales to Define a Rely-Guarantee Temporal Logic},
url={http://dx.doi.org/10.1007/978-3-642-32347-8_20},
publisher={Springer Berlin Heidelberg},
keywords={logics for agency; temporal logic; reasoning about strategies; modular specification; Isabelle proof assistant},
author={Mansky, William and Gunter, Elsa L.},
pages={299-314}
}

@ARTICLE{graphviz,
    author = {Emden R. Gansner and Stephen C. North},
    title = {An open graph visualization system and its applications to software engineering},
    journal = {SOFTWARE - PRACTICE AND EXPERIENCE},
    year = {2000},
    volume = {30},
    number = {11},
    pages = {1203--1233}
}

@inproceedings{seplogic,
 author = {Reynolds, John C.},
 title = {Separation Logic: A Logic for Shared Mutable Data Structures},
 booktitle = {Proceedings of the 17th Annual IEEE Symposium on Logic in Computer Science},
 series = {LICS '02},
 year = {2002},
 isbn = {0-7695-1483-9},
 pages = {55--74},
 numpages = {20},
 url = {http://dl.acm.org/citation.cfm?id=645683.664578},
 acmid = {664578},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
} 

@book{picalc,
 author = {Milner, Robin},
 title = {Communicating and Mobile Systems: The $\pi$-calculus},
 year = {1999},
 isbn = {0-521-65869-1},
 publisher = {Cambridge University Press},
 address = {New York, NY, USA},
} 

@article{statecharts,
 author = {Harel, David},
 title = {Statecharts:  A Visual Formalism for Complex Systems},
 journal = {Sci. Comput. Program.},
 issue_date = {June 1, 1987},
 volume = {8},
 number = {3},
 month = jun,
 year = {1987},
 issn = {0167-6423},
 pages = {231--274},
 numpages = {44},
 url = {http://dx.doi.org/10.1016/0167-6423(87)90035-9},
 doi = {10.1016/0167-6423(87)90035-9},
 acmid = {34886},
 publisher = {Elsevier North-Holland, Inc.},
 address = {Amsterdam, The Netherlands, The Netherlands},
} 

@book{actors,
 author = {Agha, Gul},
 title = {Actors: A Model of Concurrent Computation in Distributed Systems},
 year = {1986},
 isbn = {0-262-01092-5},
 publisher = {MIT Press},
 address = {Cambridge, MA, USA},
} 

@article{listinf,
  author    = {David Trachtenherz},
  title     = {{Infinite Lists}},
  journal   = {Archive of Formal Proofs},
  volume    = {2011},
  year      = {2011},
  ee        = {http://afp.sourceforge.net/entries/List-Infinite.shtml},
  bibsource = {DBLP, http://dblp.uni-trier.de}
} 

@incollection{memmodels,
year={1992},
isbn={978-1-4613-6601-0},
booktitle={Scalable Shared Memory Multiprocessors},
editor={Dubois, Michel and Thakkar, Shreekant},
doi={10.1007/978-1-4615-3604-8_2},
title={Formal Specification of Memory Models},
url={http://dx.doi.org/10.1007/978-1-4615-3604-8_2},
publisher={Springer US},
author={Sindhu, Pradeep S. and Frailong, Jean-Marc and Cekleov, Michel},
pages={25-41},
language={English}
}

@PhdThesis{wmthesis,
  author =       {William Ernest Mansky},
  title =        {Specifying and Verifying Program Transformations with {PTRANS}},
  school =       {University of Illinois at Urbana-Champaign},
  year =         {2014},
  month =     {May},
}

@InProceedings{ptrans-basic,
  author =	{William Mansky and Elsa L. Gunter},
  title =	{{Verifying Optimizations for Concurrent Programs}},
  booktitle =	{First International Workshop on Rewriting Techniques for  Program Transformations and Evaluation},
  pages =	{15--26},
  series =	{OpenAccess Series in Informatics (OASIcs)},
  ISBN =	{978-3-939897-70-5},
  ISSN =	{2190-6807},
  year =	{2014},
  volume =	{40},
  editor =	{Manfred Schmidt-Schau{\ss} and Masahiko Sakai and David Sabel and Yuki  Chiba},
  publisher =	{Schloss Dagstuhl--Leibniz-Zentrum fuer Informatik},
  address =	{Dagstuhl, Germany},
  URL =		{http://drops.dagstuhl.de/opus/volltexte/2014/4586},
  URN =		{urn:nbn:de:0030-drops-45869},
  doi =		{http://dx.doi.org/10.4230/OASIcs.WPTE.2014.15},
  annote =	{Keywords: optimizing compilers, interactive theorem proving, program transformations, temporal logic, relaxed memory models}
}

@inproceedings{ptrans-exec,
  author    = {William Mansky and
               Dennis Griffith and
               Elsa L. Gunter},
  title     = {Specifying and Executing Optimizations for Parallel Programs},
  booktitle = {Proceedings 3rd Workshop on {GRAPH} Inspection and Traversal Engineering,
               {GRAPHITE} 2014, Grenoble, France, 5th April 2014.},
  year      = {2014},
  pages     = {58--70},
  crossref  = {DBLP:journals/corr/BosnackiELW14},
  url       = {http://dx.doi.org/10.4204/EPTCS.159.6},
  doi       = {10.4204/EPTCS.159.6},
  timestamp = {Sun, 14 Sep 2014 16:24:41 +0200},
  biburl    = {http://dblp.uni-trier.de/rec/bib/journals/corr/ManskyGG14},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@article{simdverif,
 author = {Barthe, Gilles and Crespo, Juan Manuel and Gulwani, Sumit and Kunz, Cesar and Marron, Mark},
 title = {{From Relational Verification to SIMD Loop Synthesis}},
 journal = {SIGPLAN Not.},
 issue_date = {August 2013},
 volume = {48},
 number = {8},
 month = feb,
 year = {2013},
 issn = {0362-1340},
 pages = {123--134},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2517327.2442529},
 doi = {10.1145/2517327.2442529},
 acmid = {2442529},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {program vectorization, relational verification, synthesis},
} 

@incollection{beringer2014,
year={2014},
isbn={978-3-642-54832-1},
booktitle={Programming Languages and Systems},
volume={8410},
series={Lecture Notes in Computer Science},
editor={Shao, Zhong},
doi={10.1007/978-3-642-54833-8_7},
title={{Verified Compilation for Shared-Memory C}},
url={http://dx.doi.org/10.1007/978-3-642-54833-8_7},
publisher={Springer Berlin Heidelberg},
author={Beringer, Lennart and Stewart, Gordon and Dockins, Robert and Appel, Andrew W.},
pages={107-127},
language={English}
}

@inproceedings{cslpar,
 author = {Bell, Christian J. and Appel, Andrew W. and Walker, David},
 title = {Concurrent Separation Logic for Pipelined Parallelization},
 booktitle = {Proceedings of the 17th International Conference on Static Analysis},
 series = {SAS'10},
 year = {2010},
 isbn = {3-642-15768-8, 978-3-642-15768-4},
 location = {Perpignan, France},
 pages = {151--166},
 numpages = {16},
 url = {http://dl.acm.org/citation.cfm?id=1882094.1882104},
 acmid = {1882104},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
} 

@incollection{seppar,
year={2009},
isbn={978-3-642-03236-3},
booktitle={Static Analysis},
volume={5673},
series={Lecture Notes in Computer Science},
editor={Palsberg, Jens and Su, Zhendong},
doi={10.1007/978-3-642-03237-0_6},
title={Automatic Parallelization and Optimization of Programs by Proof Rewriting},
url={http://dx.doi.org/10.1007/978-3-642-03237-0_6},
publisher={Springer Berlin Heidelberg},
author={Hurlin, Cl\'{e}ment},
pages={52-68},
language={English}
}

@inproceedings{threadspec,
 author = {Steffan, J. and Mowry, T},
 title = {The Potential for Using Thread-Level Data Speculation to Facilitate Automatic Parallelization},
 booktitle = {Proceedings of the 4th International Symposium on High-Performance Computer Architecture},
 series = {HPCA '98},
 year = {1998},
 isbn = {0-8186-8323-6},
 pages = {2--},
 url = {http://dl.acm.org/citation.cfm?id=822079.822712},
 acmid = {822712},
 publisher = {IEEE Computer Society},
 address = {Washington, DC, USA},
} 

@inproceedings{javaforkjoin,
 author = {Lea, Doug},
 title = {A Java Fork/Join Framework},
 booktitle = {Proceedings of the ACM 2000 Conference on Java Grande},
 series = {JAVA '00},
 year = {2000},
 isbn = {1-58113-288-3},
 location = {San Francisco, California, USA},
 pages = {36--43},
 numpages = {8},
 doi = {10.1145/337449.337465},
 acmid = {337465},
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@INPROCEEDINGS{smt-mm,
author={Yang, Y. and Gopalakrishnan, G. and Lindstrom, G. and Slind, K.},
booktitle={Parallel and Distributed Processing Symposium, 2004. Proceedings. 18th International},
title={Nemos: a framework for axiomatic and executable specifications of memory consistency models},
year={2004},
month={April},
pages={31-},
keywords={computability;constraint handling;formal specification;formal verification;multiprocessing programs;shared memory systems;Nemos specification framework;Nonoperational yet Executable Memory Ordering Specifications framework;PRAM;SAT solving;automated verification;axiomatic specifications;causal consistency;coherence;constraint logic programming;executable specifications;memory consistency models;memory consistency rules;memory model specification;multiprocessor programs;predicate logic;processor consistency;sequential consistency;shared memory semantics;shared memory systems;Coherence;Computer languages;Java;Logic programming;Phase change random access memory;Programming profession;Random access memory;Read-write memory;Software engineering;Yarn},
doi={10.1109/IPDPS.2004.1302944},}

@INPROCEEDINGS{Higham97definingmm,
    author = {Lisa Higham and Jalal Kawash and Nathaly Verwaal},
    title = {Defining and Comparing Memory Consistency Models},
    booktitle = {In Proc. of the 10th Int'l Conf. on Parallel and Distributed Computing Systems},
    year = {1997},
    pages = {349--356}
}

@inproceedings{rao-mm,
 author = {Saraswat, Vijay A. and Jagadeesan, Radha and Michael, Maged and von Praun, Christoph},
 title = {A Theory of Memory Models},
 booktitle = {Proceedings of the 12th ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming},
 series = {PPoPP '07},
 year = {2007},
 isbn = {978-1-59593-602-8},
 location = {San Jose, California, USA},
 pages = {161--172},
 numpages = {12},
 doi = {10.1145/1229428.1229469},
 acmid = {1229469},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {memory model, sequential consistency, weak model},
} 

@inproceedings{quasiconcrete,
 author = {Kang, Jeehoon and Hur, Chung{-}Kil and Mansky, William and Garbuzov, Dmitri and Zdancewic, Steve and Vafeiadis, Viktor},
 title = {A Formal {C} Memory Model Supporting Integer-Pointer Casts},
booktitle = {{ACM} {SIGPLAN} Conference on Programming Language Design and Implementation,
               {PLDI} '15},
 year = {to appear},
 }

@article{compcerttso,
 author = {\v{S}ev\v{c}\'{\i}k, Jaroslav and Vafeiadis, Viktor and Zappa Nardelli, Francesco and Jagannathan, Suresh and Sewell, Peter},
 title = {{CompCertTSO}: A Verified Compiler for Relaxed-Memory Concurrency},
 journal = {J. ACM},
 issue_date = {June 2013},
 volume = {60},
 number = {3},
 month = jun,
 year = {2013},
 issn = {0004-5411},
 pages = {22:1--22:50},
 articleno = {22},
 numpages = {50},
 doi = {10.1145/2487241.2487248},
 acmid = {2487248},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Relaxed memory models, semantics, verified compilation},
} 

@inproceedings{compcomp,
 author = {Stewart, Gordon and Beringer, Lennart and Cuellar, Santiago and Appel, Andrew W.},
 title = {Compositional CompCert},
 booktitle = {Proceedings of the 42nd Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '15},
 year = {2015},
 isbn = {978-1-4503-3300-9},
 location = {Mumbai, India},
 pages = {275--287},
 numpages = {13},
 doi = {10.1145/2676726.2676985},
 acmid = {2676985},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {compcert, compiler correctness},
} 

@inproceedings{siloes,
 author = {Joisha, Pramod G. and Schreiber, Robert S. and Banerjee, Prithviraj and Boehm, Hans J. and Chakrabarti, Dhruva R.},
 title = {A Technique for the Effective and Automatic Reuse of Classical Compiler Optimizations on Multithreaded Code},
 booktitle = {Proceedings of the 38th Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '11},
 year = {2011},
 isbn = {978-1-4503-0490-0},
 location = {Austin, Texas, USA},
 pages = {623--636},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/1926385.1926457},
 doi = {10.1145/1926385.1926457},
 acmid = {1926457},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {data-flow analysis, parallel-program optimization},
} 

@techreport{burckhardt,
  title={Verifying Compiler Transformations for Concurrent Programs},
  author={Burckhardt, Sebastian and Musuvathi, Madanlal and Singh, Vasu},
  institution={Microsoft Research},
  month={November},
  year={2008},
  number={MSR-TR-2008-171}
}

@inproceedings{c11invalid,
 author = {Vafeiadis, Viktor and Balabonski, Thibaut and Chakraborty, Soham and Morisset, Robin and Zappa Nardelli, Francesco},
 title = {Common Compiler Optimisations Are Invalid in the {C11} Memory Model and What We Can Do About It},
 booktitle = {Proceedings of the 42Nd Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '15},
 year = {2015},
 isbn = {978-1-4503-3300-9},
 location = {Mumbai, India},
 pages = {209--220},
 numpages = {12},
 DOI = {10.1145/2676726.2676995},
 acmid = {2676995},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {c/c++, compilers, concurrency, program transformations, weak memory models},
}

@misc{llvmref,
  key = {{LLVM Organization}},
  title = {{LLVM Language Reference Manual}},
  month = {April},
  year = 2014,
  howpublished = {http://llvm.org/docs/LangRef.html}
}

@article{lamporthb,
 author = {Lamport, Leslie},
 title = {Time, Clocks, and the Ordering of Events in a Distributed System},
 journal = {Commun. ACM},
 issue_date = {July 1978},
 volume = {21},
 number = {7},
 month = jul,
 year = {1978},
 issn = {0001-0782},
 pages = {558--565},
 numpages = {8},
 url = {http://doi.acm.org/10.1145/359545.359563},
 doi = {10.1145/359545.359563},
 acmid = {359563},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {clock synchronization, computer networks, distributed systems, multiprocess systems},
}

@inproceedings{manson_java_2005,
 author = {Manson, Jeremy and Pugh, William and Adve, Sarita V.},
 title = {The {Java} Memory Model},
 booktitle = {Proceedings of the 32nd ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '05},
 year = {2005},
 isbn = {1-58113-830-X},
 location = {Long Beach, California, USA},
 pages = {378--391},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/1040305.1040336},
 doi = {10.1145/1040305.1040336},
 acmid = {1040336},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Java, concurrency, memory model, multithreading},
} 

@inproceedings{c11model,
 author = {Batty, Mark and Owens, Scott and Sarkar, Susmit and Sewell, Peter and Weber, Tjark},
 title = {Mathematizing {C++} Concurrency},
 booktitle = {Proceedings of the 38th Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
 series = {POPL '11},
 year = {2011},
 isbn = {978-1-4503-0490-0},
 location = {Austin, Texas, USA},
 pages = {55--66},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1926385.1926394},
 doi = {10.1145/1926385.1926394},
 acmid = {1926394},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {relaxed memory models, semantics},
}

@incollection{axseq,
year={2015},
isbn={978-3-319-21667-6},
booktitle={Computer Aided Verification},
volume={9207},
series={Lecture Notes in Computer Science},
editor={Kroening, Daniel and PÄƒsÄƒreanu, Corina S.},
doi={10.1007/978-3-319-21668-3_24},
title={An Axiomatic Specification for Sequential Memory Models},
url={http://dx.doi.org/10.1007/978-3-319-21668-3_24},
publisher={Springer International Publishing},
keywords={Memory models; Optimizing compilers; Deep specifications},
author={Mansky, William and Garbuzov, Dmitri and Zdancewic, Steve},
pages={413-428},
language={English}
}

@incollection{alglavewmm,
year={2010},
isbn={978-3-642-14294-9},
booktitle={Computer Aided Verification},
volume={6174},
series={Lecture Notes in Computer Science},
editor={Touili, Tayssir and Cook, Byron and Jackson, Paul},
doi={10.1007/978-3-642-14295-6_25},
title={Fences in Weak Memory Models},
url={http://dx.doi.org/10.1007/978-3-642-14295-6_25},
publisher={Springer Berlin Heidelberg},
author={Alglave, Jade and Maranget, Luc and Sarkar, Susmit and Sewell, Peter},
pages={258-272},
language={English}
}

@incollection{alglavestable,
year={2011},
isbn={978-3-642-22109-5},
booktitle={Computer Aided Verification},
volume={6806},
series={Lecture Notes in Computer Science},
editor={Gopalakrishnan, Ganesh and Qadeer, Shaz},
doi={10.1007/978-3-642-22110-1_6},
title={Stability in Weak Memory Models},
url={http://dx.doi.org/10.1007/978-3-642-22110-1_6},
publisher={Springer Berlin Heidelberg},
author={Alglave, Jade and Maranget, Luc},
pages={50-66},
language={English}
}

@inproceedings{adveweak,
 author = {Adve, Sarita V. and Hill, Mark D.},
 title = {Weak Ordering\&Mdash;a New Definition},
 booktitle = {Proceedings of the 17th Annual International Symposium on Computer Architecture},
 series = {ISCA '90},
 year = {1990},
 isbn = {0-89791-366-3},
 location = {Seattle, Washington, USA},
 pages = {2--14},
 numpages = {13},
 url = {http://doi.acm.org/10.1145/325164.325100},
 doi = {10.1145/325164.325100},
 acmid = {325100},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {sequential consistency, shared-memory multiprocessor, weak ordering},
} 

@inproceedings{alglavetrans,
 author = {Alglave, Jade and Kroening, Daniel and Nimal, Vincent and Tautschnig, Michael},
 title = {Software Verification for Weak Memory via Program Transformation},
 booktitle = {Proceedings of the 22Nd European Conference on Programming Languages and Systems},
 series = {ESOP'13},
 year = {2013},
 isbn = {978-3-642-37035-9},
 location = {Rome, Italy},
 pages = {512--532},
 numpages = {21},
 url = {http://dx.doi.org/10.1007/978-3-642-37036-6_28},
 doi = {10.1007/978-3-642-37036-6_28},
 acmid = {2450306},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
} 

@inproceedings{owenssync,
 author = {Owens, Scott},
 title = {Reasoning About the Implementation of Concurrency Abstractions on x86-TSO},
 booktitle = {Proceedings of the 24th European Conference on Object-oriented Programming},
 series = {ECOOP'10},
 year = {2010},
 isbn = {3-642-14106-4, 978-3-642-14106-5},
 location = {Maribor, Slovenia},
 pages = {478--503},
 numpages = {26},
 url = {http://dl.acm.org/citation.cfm?id=1883978.1884011},
 acmid = {1884011},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
} 

@inproceedings{memspec,
  author    = {William Mansky and
               Dmitri Garbuzov and
               Steve Zdancewic},
  title     = {An Axiomatic Specification for Sequential Memory Models},
  booktitle = {Computer Aided Verification - 27th International Conference, {CAV}
               2015, San Francisco, CA, USA, July 18-24, 2015, Proceedings, Part
               {II}},
  pages     = {413--428},
  year      = {2015},
  crossref  = {DBLP:conf/cav/2015},
  url       = {http://dx.doi.org/10.1007/978-3-319-21668-3_24},
  doi       = {10.1007/978-3-319-21668-3_24},
  timestamp = {Mon, 20 Jul 2015 11:19:16 +0200},
  biburl    = {http://dblp.uni-trier.de/rec/bib/conf/cav/ManskyGZ15},
  bibsource = {dblp computer science bibliography, http://dblp.org}
}

@article{vcfidge,
 author = {Fidge, Colin},
 title = {Logical Time in Distributed Computing Systems},
 journal = {Computer},
 issue_date = {August 1991},
 volume = {24},
 number = {8},
 month = aug,
 year = {1991},
 issn = {0018-9162},
 pages = {28--33},
 numpages = {6},
 url = {http://dx.doi.org/10.1109/2.84874},
 doi = {10.1109/2.84874},
 acmid = {112860},
 publisher = {IEEE Computer Society Press},
 address = {Los Alamitos, CA, USA},
} 

@inproceedings{vcmattern,
  title={Virtual time and global states of distributed systems},
  author={Mattern, Friedemann},
  booktitle={Parallel and Distributed Algorithms},
  pages={215--226},
  year={1989}
}

@inproceedings{boehm_foundations_2008,
 author = {Boehm, Hans-J. and Adve, Sarita V.},
 title = {Foundations of the C++ Concurrency Memory Model},
 booktitle = {Proceedings of the 29th ACM SIGPLAN Conference on Programming Language Design and Implementation},
 series = {PLDI '08},
 year = {2008},
 isbn = {978-1-59593-860-2},
 location = {Tucson, AZ, USA},
 pages = {68--78},
 numpages = {11},
 url = {http://doi.acm.org/10.1145/1375581.1375591},
 doi = {10.1145/1375581.1375591},
 acmid = {1375591},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {c++, data race, memory consistency, memory model, sequential consistency, trylock},
} 

@article{djit+,
 author = {Itzkovitz, Ayal and Schuster, Assaf and Zeev-Ben-Mordehai, Oren},
 title = {Toward Integration of Data Race Detection in DSM Systems},
 journal = {J. Parallel Distrib. Comput.},
 issue_date = {Nov. 1999},
 volume = {59},
 number = {2},
 month = nov,
 year = {1999},
 issn = {0743-7315},
 pages = {180--203},
 numpages = {24},
 url = {http://dx.doi.org/10.1006/jpdc.1999.1574},
 doi = {10.1006/jpdc.1999.1574},
 acmid = {339736},
 publisher = {Academic Press, Inc.},
 address = {Orlando, FL, USA},
 keywords = {data race detection, debugging tools, distributed shared memory, parallel computation},
} 

@inproceedings{fasttrack,
 author = {Flanagan, Cormac and Freund, Stephen N.},
 title = {FastTrack: Efficient and Precise Dynamic Race Detection},
 booktitle = {Proceedings of the 30th ACM SIGPLAN Conference on Programming Language Design and Implementation},
 series = {PLDI '09},
 year = {2009},
 isbn = {978-1-60558-392-1},
 location = {Dublin, Ireland},
 pages = {121--133},
 numpages = {13},
 url = {http://doi.acm.org/10.1145/1542476.1542490},
 doi = {10.1145/1542476.1542490},
 acmid = {1542490},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {concurrency, dynamic analysis, race conditions},
} 

@inproceedings{softbound,
 author = {Nagarakatte, Santosh and Zhao, Jianzhou and Martin, Milo M.K. and Zdancewic, Steve},
 title = {SoftBound: Highly Compatible and Complete Spatial Memory Safety for C},
 booktitle = {Proceedings of the 30th ACM SIGPLAN Conference on Programming Language Design and Implementation},
 series = {PLDI '09},
 year = {2009},
 isbn = {978-1-60558-392-1},
 location = {Dublin, Ireland},
 pages = {245--258},
 numpages = {14},
 url = {http://doi.acm.org/10.1145/1542476.1542504},
 doi = {10.1145/1542476.1542504},
 acmid = {1542504},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {buffer overflows, c, spatial memory safety},
} 

@inproceedings{tsan,
 author = {Serebryany, Konstantin and Iskhodzhanov, Timur},
 title = {ThreadSanitizer: Data Race Detection in Practice},
 booktitle = {Proceedings of the Workshop on Binary Instrumentation and Applications},
 series = {WBIA '09},
 year = {2009},
 isbn = {978-1-60558-793-6},
 location = {New York, New York, USA},
 pages = {62--71},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/1791194.1791203},
 doi = {10.1145/1791194.1791203},
 acmid = {1791203},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Valgrind, concurrency bugs, dynamic data race detection, testing},
} 

@inproceedings{pozniansky_efficient_2003,
	address = {New York, NY, USA},
	series = {{PPoPP} '03},
	title = {Efficient on-the-fly data race detection in multithreaded {C}++ programs},
	isbn = {1-58113-588-2},
	url = {http://doi.acm.org/10.1145/781498.781529},
	doi = {10.1145/781498.781529},
	abstract = {Data race detection is highly essential for debugging multithreaded programs and assuring their correctness. Nevertheless, there is no single universal technique capable of handling the task efficiently, since the data race detection problem is computationally hard in the general case. Thus, to approximate the possible races in a program, all currently available tools take different ``short-cuts'', such as using strong assumptions on the program structure or applying various heuristics. When applied to some general case program, however, they usually result in excessive false alarms or in a large number of undetected races.Another major drawback of many currently available tools is that they are restricted, for performance reasons, to detection units of fixed size. Thus, they all suffer from the same problem---choosing a small unit might result in missing some of the data races, while choosing a large one might lead to false detection.In this paper we present a novel testing tool, called MultiRace, which combines improved versions of Djit and Lockset---two very powerful on-the-fly algorithms for dynamic detection of apparent data races. Both extended algorithms detect races in multithreaded programs that may execute on weak consistency systems, and may use two-way as well as global synchronization primitives.By employing novel technologies, MultiRace adjusts its detection to the native granularity of objects and variables in the program under examination. In order to monitor all accesses to each of the shared locations, MultiRace instruments the C++ source code of the program. It lets the user fine-tune the detection process, but otherwise is completely automatic and transparent.This paper describes the algorithms employed in MultiRace, discusses some of its implementation issues, and proposes several optimizations to it. The paper shows that the overheads imposed by MultiRace are often much smaller (orders of magnitude) than those obtained by other existing dynamic techniques.},
	urldate = {2013-02-16},
	booktitle = {Proceedings of the ninth {ACM} {SIGPLAN} symposium on {Principles} and practice of parallel programming},
	publisher = {ACM},
	author = {Pozniansky, Eli and Schuster, Assaf},
	year = {2003},
	keywords = {concurrency, data race, instrumentation, lockset race detection, multithreading, sampling, synchronization},
	pages = {179--190}
}

@inproceedings{serebryany_threadsanitizer:_2009,
	address = {New York, NY, USA},
	series = {{WBIA} '09},
	title = {{ThreadSanitizer}: {Data} {Race} {Detection} in {Practice}},
	isbn = {978-1-60558-793-6},
	shorttitle = {{ThreadSanitizer}},
	url = {http://doi.acm.org/10.1145/1791194.1791203},
	doi = {10.1145/1791194.1791203},
	abstract = {Data races are a particularly unpleasant kind of threading bugs. They are hard to find and reproduce -- you may not observe a bug during the entire testing cycle and will only see it in production as rare unexplainable failures. This paper presents ThreadSanitizer -- a dynamic detector of data races. We describe the hybrid algorithm (based on happens-before and locksets) used in the detector. We introduce what we call dynamic annotations -- a sort of race detection API that allows a user to inform the detector about any tricky synchronization in the user program. Various practical aspects of using ThreadSanitizer for testing multithreaded C++ code at Google are also discussed.},
	urldate = {2015-03-19},
	booktitle = {Proceedings of the {Workshop} on {Binary} {Instrumentation} and {Applications}},
	publisher = {ACM},
	author = {Serebryany, Konstantin and Iskhodzhanov, Timur},
	year = {2009},
	keywords = {concurrency bugs, dynamic data race detection, testing, Valgrind},
	pages = {62--71},
	file = {ACM Full Text PDF:/Users/devietti/Documents/bibliotheca/zotero/storage/DEB4VQ5M/Serebryany and Iskhodzhanov - 2009 - ThreadSanitizer Data Race Detection in Practice.pdf:application/pdf}
}

@inproceedings{christiaens_trade:_2001,
	address = {London, UK, UK},
	series = {{ICCS} '01},
	title = {{TRaDe}: {Data} {Race} {Detection} for {Java}},
	isbn = {3-540-42233-1},
	shorttitle = {{TRaDe}},
	url = {http://dl.acm.org/citation.cfm?id=645456.654536},
	abstract = {This article presents the results of a novel approach to race detection in multi-threaded Java programs. Using a topological approach to reduce the set of objects needing to be observed for data races, we have succeeded in reducing significantly the time needed to do data race detection. Currently, we perform data race detection faster than all known competition. Furthermore, TRaDe can perform data race detection for applications with a high, dynamically varying number of threads through the use of a technique called 'accordion clocks'.},
	urldate = {2013-02-16},
	booktitle = {Proceedings of the {International} {Conference} on {Computational} {Science}-{Part} {II}},
	publisher = {Springer-Verlag},
	author = {Christiaens, Mark and Bosschere, Koenraad De},
	year = {2001},
	keywords = {accordian clocks, data race detection},
	pages = {761--770}
}

@inproceedings{elmas_goldilocks:_2007,
	title = {Goldilocks: a race and transaction-aware java runtime},
	shorttitle = {Goldilocks},
	url = {http://doi.acm.org/10.1145/1273442.1250762},
	doi = {10.1145/1273442.1250762},
	urldate = {2012-01-21},
	booktitle = {Proceedings of the 2007 {ACM} {SIGPLAN} conference on {Programming} language design and implementation},
	author = {Elmas, Tayfun and Qadeer, Shaz and Tasiran, Serdar},
	month = jun,
	year = {2007},
	keywords = {\_tablet, data-race detection, Java runtime, runtime monitoring, software transactions},
	pages = {245--255},
	file = {goldilocks.pdf:/Users/devietti/Documents/bibliotheca/zotero/storage/HEGJNPZZ/goldilocks.pdf:application/pdf}
}

@article{flanagan_fasttrack:_2010,
	title = {{FastTrack}: {Efficient} and {Precise} {Dynamic} {Race} {Detection}},
	volume = {53},
	issn = {0001-0782},
	shorttitle = {{FastTrack}},
	url = {http://doi.acm.org/10.1145/1839676.1839699},
	doi = {10.1145/1839676.1839699},
	number = {11},
	urldate = {2011-12-22},
	journal = {Communications of the ACM},
	author = {Flanagan, Cormac and Freund, Stephen N.},
	month = nov,
	year = {2010},
	pages = {93--101},
	file = {10-cacm.pdf:/Users/devietti/Documents/bibliotheca/zotero/storage/HTR7HTXJ/10-cacm.pdf:application/pdf}
}

@inproceedings{slimstate,
	series = {{ASE} '15},
	title = {Array Shadow State Compression for Precise Dynamic Race Detection},
	booktitle = {Proceedings of the 30th IEEE/ACM International Conference on
Automated Software Engineering},
	author = {James Wilcox and Parker Finch and Cormac Flanagan and Stephen N. Freund},
	year = {2015},
}

@inproceedings{dinning_detecting_1991,
	address = {New York, NY, USA},
	series = {{PADD} '91},
	title = {Detecting access anomalies in programs with critical sections},
	isbn = {0-89791-457-0},
	url = {http://doi.acm.org/10.1145/122759.122767},
	doi = {10.1145/122759.122767},
	urldate = {2013-02-16},
	booktitle = {Proceedings of the 1991 {ACM}/{ONR} workshop on {Parallel} and distributed debugging},
	publisher = {ACM},
	author = {Dinning, Anne and Schonberg, Edith},
	year = {1991},
	keywords = {lockset race detection},
	pages = {85--96}
}

@article{savage_eraser:_1997,
	title = {Eraser: a dynamic data race detector for multithreaded programs},
	volume = {15},
	issn = {07342071},
	url = {http://portal.acm.org/citation.cfm?doid=265924.265927},
	doi = {10.1145/265924.265927},
	number = {4},
	journal = {ACM Transactions on Computer Systems},
	author = {Savage, Stefan and Burrows, Michael and Nelson, Greg and Sobalvarro, Patrick and Anderson, Thomas},
	month = nov,
	year = {1997},
	keywords = {lockset race detection},
	pages = {391--411},
	file = {eraser.pdf:/Users/devietti/Documents/bibliotheca/zotero/storage/TKSE2KFJ/eraser.pdf:application/pdf}
}

@inproceedings{smaragdakis_sound_2012,
	address = {New York, NY, USA},
	series = {{POPL} '12},
	title = {Sound predictive race detection in polynomial time},
	isbn = {978-1-4503-1083-3},
	url = {http://doi.acm.org/10.1145/2103656.2103702},
	doi = {10.1145/2103656.2103702},
	abstract = {Data races are among the most reliable indicators of programming errors in concurrent software. For at least two decades, Lamport's happens-before (HB) relation has served as the standard test for detecting races--other techniques, such as lockset-based approaches, fail to be sound, as they may falsely warn of races. This work introduces a new relation, causally-precedes (CP), which generalizes happens-before to observe more races without sacrificing soundness. Intuitively, CP tries to capture the concept of happens-before ordered events that must occur in the observed order for the program to observe the same values. What distinguishes CP from past predictive race detection approaches (which also generalize an observed execution to detect races in other plausible executions) is that CP-based race detection is both sound and of polynomial complexity. We demonstrate that the unique aspects of CP result in practical benefit. Applying CP to real-world programs, we successfully analyze server-level applications (e.g., Apache FtpServer) and show that traces longer than in past predictive race analyses can be analyzed in mere seconds to a few minutes. For these programs, CP race detection uncovers races that are hard to detect by repeated execution and HB race detection: a single run of CP race detection produces several races not discovered by 10 separate rounds of happens-before race detection.},
	urldate = {2013-02-17},
	booktitle = {Proceedings of the 39th annual {ACM} {SIGPLAN}-{SIGACT} symposium on {Principles} of programming languages},
	publisher = {ACM},
	author = {Smaragdakis, Yannis and Evans, Jacob and Sadowski, Caitlin and Yi, Jaeheon and Flanagan, Cormac},
	year = {2012},
	keywords = {dynamic analysis, happens-before, race detection},
	pages = {387--400},
	file = {Smaragdakis et al_2012_Sound predictive race detection in polynomial time.pdf:/Users/devietti/Documents/bibliotheca/zotero/storage/8EZWKAK8/Smaragdakis et al_2012_Sound predictive race detection in polynomial time.pdf:application/pdf}
}

@inproceedings{sen_detecting_2005,
	address = {Berlin, Heidelberg},
	series = {{FMOODS}'05},
	title = {Detecting {Errors} in {Multithreaded} {Programs} by {Generalized} {Predictive} {Analysis} of {Executions}},
	isbn = {3-540-26181-8, 978-3-540-26181-0},
	url = {http://dx.doi.org/10.1007/11494881_14},
	doi = {10.1007/11494881_14},
	abstract = {A predictive runtime analysis technique is proposed for detecting violations of safety properties from apparently successful executions of concurrent systems. In this paper we focus on concurrent systems developed using common object-oriented multithreaded programming languages, in particular, Java. Specifically, we provide an algorithm to observe execution traces of multithreaded programs and, based on appropriate code instrumentation that allows one to atomically extract a partial-order causality from a linear sequence of events, we predict other schedules that are compatible with the run. The technique uses a weak happens-before relation which orders a write of a shared variable with all its subsequent reads that occur before the next write to the variable. A permutation of the observed events is a possible execution of a program if and only if it does not contradict the weak happens-before relation. Even though an observed execution trace may not violate the given specification, our algorithm infers other possible executions (consistent with the observed execution) that violate the given specification, if such an execution exists. Therefore, it can predict concurrency errors from non-violating runs.},
	urldate = {2015-03-20},
	booktitle = {Proceedings of the 7th {IFIP} {WG} 6.1 {International} {Conference} on {Formal} {Methods} for {Open} {Object}-{Based} {Distributed} {Systems}},
	publisher = {Springer-Verlag},
	author = {Sen, Koushik and Roşu, Grigore and Agha, Gul},
	year = {2005},
	pages = {211--226}
}

@inproceedings{chen_parametric_2007,
	address = {Berlin, Heidelberg},
	series = {{CAV}'07},
	title = {Parametric and {Sliced} {Causality}},
	isbn = {978-3-540-73367-6},
	url = {http://dl.acm.org/citation.cfm?id=1770351.1770387},
	abstract = {Happen-before causal partial orders have been widely used in concurrent program verification and testing. This paper presents a parametric approach to happen-before causal partial orders. Existing variants of happen-before relations can be obtained as instances of the parametric framework. A novel causal partial order, called sliced causality, is then defined also as an instance of the parametric framework, which loosens the obvious but strict happen-before relation by considering static and dynamic dependence information about the program. Sliced causality has been implemented in a runtime predictive analysis tool for JAVA, named jPREDICTOR, and the evaluation results show that sliced causality can significantly improve the capability of concurrent verification and testing.},
	urldate = {2015-03-20},
	booktitle = {Proceedings of the 19th {International} {Conference} on {Computer} {Aided} {Verification}},
	publisher = {Springer-Verlag},
	author = {Chen, Feng and Roşu, Grigore},
	year = {2007},
	pages = {240--253}
}

@inproceedings{greathouse_demand-driven_2011,
	address = {New York, NY, USA},
	series = {{ISCA} '11},
	title = {Demand-driven {Software} {Race} {Detection} {Using} {Hardware} {Performance} {Counters}},
	isbn = {978-1-4503-0472-6},
	url = {http://doi.acm.org/10.1145/2000064.2000084},
	doi = {10.1145/2000064.2000084},
	abstract = {Dynamic data race detectors are an important mechanism for creating robust parallel programs. Software race detectors instrument the program under test, observe each memory access, and watch for inter-thread data sharing that could lead to concurrency errors. While this method of bug hunting can find races that are normally difficult to observe, it also suffers from high runtime overheads. It is not uncommon for commercial race detectors to experience 300x slowdowns, limiting their usage. This paper presents a hardware-assisted demand-driven race detector. We are able to observe cache events that are indicative of data sharing between threads by taking advantage of hardware available on modern commercial microprocessors. We use these to build a race detector that is only enabled when it is likely that inter-thread data sharing is occurring. When little sharing takes place, this demand-driven analysis is much faster than contemporary continuous-analysis tools without a large loss of detection accuracy. We modified the race detector in Intel(R) Inspector XE to utilize our hardware-based sharing indicator and were able to achieve performance increases of 3x and 10x in two parallel benchmark suites and 51x for one particular program.},
	urldate = {2014-04-26},
	booktitle = {Proceedings of the 38th {Annual} {International} {Symposium} on {Computer} {Architecture}},
	publisher = {ACM},
	author = {Greathouse, Joseph L. and Ma, Zhiqiang and Frank, Matthew I. and Peri, Ramesh and Austin, Todd},
	year = {2011},
	keywords = {cache coherency, data race detection, demand analysis, performance counters},
	pages = {165--176},
	file = {p165-greathouse.pdf:/Users/devietti/Documents/bibliotheca/zotero/storage/GEAEGQ28/p165-greathouse.pdf:application/pdf}
}

@inproceedings{bond_pacer:_2010,
	address = {Toronto, Ontario, Canada},
	title = {{PACER}: {Proportional} {Detection} of {Data} {Races}},
	url = {http://portal.acm.org/citation.cfm?doid=1806596.1806626},
	doi = {10.1145/1806596.1806626},
	booktitle = {Proceedings of the 2010 {ACM} {SIGPLAN} conference on {Programming} language design and implementation - {PLDI} '10},
	author = {Bond, Michael D. and Coons, Katherine E. and McKinley, Kathryn S.},
	year = {2010},
	keywords = {race detection, sampling},
	pages = {255},
	file = {bond.pacer.pldi.2010.pdf:/Users/devietti/Documents/bibliotheca/zotero/storage/3CC6IASR/bond.pacer.pldi.2010.pdf:application/pdf}
}

@inproceedings{marino_literace:_2009,
	address = {Dublin, Ireland},
	title = {{LiteRace}: {Effective} {Sampling} for {Lightweight} {Data}-{Race} {Detection}},
	url = {http://portal.acm.org/citation.cfm?doid=1542476.1542491},
	doi = {10.1145/1542476.1542491},
	booktitle = {Proceedings of the 2009 {ACM} {SIGPLAN} conference on {Programming} language design and implementation - {PLDI} '09},
	author = {Marino, Daniel and Musuvathi, Madanlal and Narayanasamy, Satish},
	year = {2009},
	keywords = {race detection, sampling},
	pages = {134}
}

@inproceedings{erickson_effective_2010,
	address = {Berkeley, CA, USA},
	series = {{OSDI}'10},
	title = {Effective data-race detection for the kernel},
	url = {http://dl.acm.org/citation.cfm?id=1924943.1924954},
	abstract = {Data races are an important class of concurrency errors where two threads erroneously access a shared memory location without appropriate synchronization. This paper presents DataCollider, a lightweight and effective technique for dynamically detecting data races in kernel modules. Unlike existing data-race detection techniques, DataCollider is oblivious to the synchronization protocols (such as locking disciplines) the program uses to protect shared memory accesses. This is particularly important for low-level kernel code that uses a myriad of complex architecture/device specific synchronization mechanisms. To reduce the runtime overhead, DataCollider randomly samples a small percentage of memory accesses as candidates for data-race detection. The key novelty of DataCollider is that it uses breakpoint facilities already supported by many hardware architectures to achieve negligible runtime overheads. We have implemented DataCollider for the Windows 7 kernel and have found 25 confirmed erroneous data races of which 12 have already been fixed.},
	urldate = {2013-02-16},
	booktitle = {Proceedings of the 9th {USENIX} conference on {Operating} systems design and implementation},
	publisher = {USENIX Association},
	author = {Erickson, John and Musuvathi, Madanlal and Burckhardt, Sebastian and Olynyk, Kirk},
	year = {2010},
	pages = {1--16}
}

@inproceedings{effinger-dean_ifrit:_2012,
	address = {New York, NY, USA},
	series = {{OOPSLA} '12},
	title = {{IFRit}: interference-free regions for dynamic data-race detection},
	isbn = {978-1-4503-1561-6},
	shorttitle = {{IFRit}},
	url = {http://doi.acm.org/10.1145/2384616.2384650},
	doi = {10.1145/2384616.2384650},
	abstract = {We propose a new algorithm for dynamic data-race detection. Our algorithm reports no false positives and runs on arbitrary C and C++ code. Unlike previous algorithms, we do not have to instrument every memory access or track a full happens-before relation. Our data-race detector, which we call IFRit, is based on a run-time abstraction called an interference-free region (IFR). An IFR is an interval of one thread's execution during which any write to a specific variable by a different thread is a data race. We insert instrumentation at compile time to monitor active IFRs at run-time. If the runtime observes overlapping IFRs for conflicting accesses to the same variable in two different threads, it reports a race. The static analysis aggregates information for multiple accesses to the same variable, avoiding the expense of having to instrument every memory access in the program. We directly compare IFRit to FastTrack and ThreadSanitizer, two state-of-the-art fully-precise data-race detectors. We show that IFRit imposes a fraction of the overhead of these detectors. We show that for the PARSEC benchmarks, and several real-world applications, IFRit finds many of the races detected by a fully-precise detector. We also demonstrate that sampling can further reduce IFRit's performance overhead without completely forfeiting precision.},
	urldate = {2013-02-15},
	booktitle = {Proceedings of the {ACM} international conference on {Object} oriented programming systems languages and applications},
	publisher = {ACM},
	author = {Effinger-Dean, Laura and Lucia, Brandon and Ceze, Luis and Grossman, Dan and Boehm, Hans-J.},
	year = {2012},
	keywords = {concurrency, data race detection, interference-free regions},
	pages = {467--484},
	file = {ACM Full Text PDF:/Users/devietti/Documents/bibliotheca/zotero/storage/EE8JB8MD/Effinger-Dean et al. - 2012 - IFRit interference-free regions for dynamic data-.pdf:application/pdf}
}

@inproceedings{engler_racerx:_2003,
	address = {New York, NY, USA},
	series = {{SOSP} '03},
	title = {{RacerX}: effective, static detection of race conditions and deadlocks},
	isbn = {1-58113-757-5},
	shorttitle = {{RacerX}},
	url = {http://doi.acm.org/10.1145/945445.945468},
	doi = {10.1145/945445.945468},
	abstract = {This paper describes RacerX, a static tool that uses flow-sensitive, interprocedural analysis to detect both race conditions and deadlocks. It is explicitly designed to find errors in large, complex multithreaded systems. It aggressively infers checking information such as which locks protect which operations, which code contexts are multithreaded, and which shared accesses are dangerous. It tracks a set of code features which it uses to sort errors both from most to least severe. It uses novel techniques to counter the impact of analysis mistakes. The tool is fast, requiring between 2-14 minutes to analyze a 1.8 million line system. We have applied it to Linux, FreeBSD, and a large commercial code base, finding serious errors in all of them. RacerX is a static tool that uses flow-sensitive, interprocedural analysis to detect both race conditions and deadlocks. It uses novel strategies to infer checking information such as which locks protect which operations, which code contexts are multithreaded, and which shared accesses are dangerous. We applied it to FreeBSD, Linux and a large commercial code base and found serious errors in all of them.},
	urldate = {2013-02-16},
	booktitle = {Proceedings of the nineteenth {ACM} symposium on {Operating} systems principles},
	publisher = {ACM},
	author = {Engler, Dawson and Ashcraft, Ken},
	year = {2003},
	keywords = {deadlock detection, program checking, race detection, static race detection},
	pages = {237--252},
	file = {racerx-sosp03.pdf:/Users/devietti/Documents/bibliotheca/zotero/storage/XHG8CFAZ/racerx-sosp03.pdf:application/pdf}
}

@inproceedings{naik_effective_2006,
	address = {New York, NY, USA},
	series = {{PLDI} '06},
	title = {Effective static race detection for {Java}},
	isbn = {1-59593-320-4},
	url = {http://doi.acm.org/10.1145/1133981.1134018},
	doi = {10.1145/1133981.1134018},
	abstract = {We present a novel technique for static race detection in Java programs, comprised of a series of stages that employ a combination of static analyses to successively reduce the pairs of memory accesses potentially involved in a race. We have implemented our technique and applied it to a suite of multi-threaded Java programs. Our experiments show that it is precise, scalable, and useful, reporting tens to hundreds of serious and previously unknown concurrency bugs in large, widely-used programs with few false alarms.},
	urldate = {2012-09-15},
	booktitle = {Proceedings of the 2006 {ACM} {SIGPLAN} conference on {Programming} language design and implementation},
	publisher = {ACM},
	author = {Naik, Mayur and Aiken, Alex and Whaley, John},
	year = {2006},
	keywords = {concurrency, Java, multi-threading, static race detection, synchronization},
	pages = {308--319},
	file = {ACM Full Text PDF:/Users/devietti/Documents/bibliotheca/zotero/storage/NWQVWU5D/Naik et al. - 2006 - Effective static race detection for Java.pdf:application/pdf}
}

@inproceedings{flanagan_redcard:_2013,
	address = {Berlin, Heidelberg},
	series = {{ECOOP}'13},
	title = {{RedCard}: {Redundant} {Check} {Elimination} for {Dynamic} {Race} {Detectors}},
	isbn = {978-3-642-39037-1},
	shorttitle = {{RedCard}},
	url = {http://dx.doi.org/10.1007/978-3-642-39038-8_11},
	doi = {10.1007/978-3-642-39038-8_11},
	abstract = {Precise dynamic race detectors report an error if and only if an observed program trace exhibits a data race. They must typically check for races on all memory accesses to ensure that they catch all races and generate no spurious warnings. However, a race check for a particular memory access is guaranteed to be redundant if the accessing thread has already accessed that location within the same release-free span. A release-free span is any sequence of instructions containing no lock releases or other "release-like" synchronization operations, such as wait or fork. We present a static analysis to identify redundant race checks by reasoning about memory accesses within release-free spans. In contrast to prior whole program analyses for identifying accesses that are always race-free, our redundant check analysis is span-local and can also be made method-local without any major loss in effectiveness. RedCard, our prototype implementation for the Java language, enables dynamic race detectors to reduce the number of run-time checks by close to 40\% with no loss in precision. We also present a complementary shadow proxy analysis for identifying when multiple memory locations can be treated as a single location by a dynamic race detector, again with no loss in precision. Combined, our analyses reduce the number of memory accesses requiring checks by roughly 50\%.},
	urldate = {2015-03-19},
	booktitle = {Proceedings of the 27th {European} {Conference} on {Object}-{Oriented} {Programming}},
	publisher = {Springer-Verlag},
	author = {Flanagan, Cormac and Freund, Stephen N.},
	year = {2013},
	pages = {255--280}
}

@article{abadi_types_2006,
	title = {Types for safe locking: {Static} race detection for {Java}},
	volume = {28},
	issn = {0164-0925},
	shorttitle = {Types for safe locking},
	url = {http://doi.acm.org/10.1145/1119479.1119480},
	doi = {10.1145/1119479.1119480},
	abstract = {This article presents a static race-detection analysis for multithreaded shared-memory programs, focusing on the Java programming language. The analysis is based on a type system that captures many common synchronization patterns. It supports classes with internal synchronization, classes that require client-side synchronization, and thread-local classes. In order to demonstrate the effectiveness of the type system, we have implemented it in a checker and applied it to over 40,000 lines of hand-annotated Java code. We found a number of race conditions in the standard Java libraries and other test programs. The checker required fewer than 20 additional type annotations per 1,000 lines of code. This article also describes two improvements that facilitate checking much larger programs: an algorithm for annotation inference and a user interface that clarifies warnings generated by the checker. These extensions have enabled us to use the checker for identifying race conditions in large-scale software systems with up to 500,000 lines of code.},
	number = {2},
	urldate = {2012-09-15},
	journal = {ACM Transactions on Programming Languages and Systems},
	author = {Abadi, Martin and Flanagan, Cormac and Freund, Stephen N.},
	month = mar,
	year = {2006},
	keywords = {Concurrent programs, race conditions, type-based race detection, type inference, type system},
	pages = {207--255}
}

@inproceedings{bocchino_type_2009,
	address = {Orlando, Florida, USA},
	title = {A {Type} and {Effect} {System} for {Deterministic} {Parallel} {Java}},
	url = {http://portal.acm.org/citation.cfm?doid=1640089.1640097},
	doi = {10.1145/1640089.1640097},
	abstract = {Today's shared-memory parallel programming models are complex and error-prone.While many parallel programs are intended to be deterministic, unanticipated thread interleavings can lead to subtle bugs and nondeterministic semantics. In this paper, we demonstrate that a practical type and effect system can simplify parallel programming by guaranteeing deterministic semantics with modular, compile-time type checking even in a rich, concurrent object-oriented language such as Java. We describe an object-oriented type and effect system that provides several new capabilities over previous systems for expressing deterministic parallel algorithms.We also describe a language called Deterministic Parallel Java (DPJ) that incorporates the new type system features, and we show that a core subset of DPJ is sound. We describe an experimental validation showing thatDPJ can express a wide range of realistic parallel programs; that the new type system features are useful for such programs; and that the parallel programs exhibit good performance gains (coming close to or beating equivalent, nondeterministic multithreaded programs where those are available).},
	booktitle = {Proceeding of the 24th {ACM} {SIGPLAN} conference on {Object} oriented programming systems languages and applications - {OOPSLA} '09},
	author = {Bocchino, Robert and Vakilian, Mohsen and Adve, Vikram and Dig, Danny and Adve, Sarita and Heumann, Stephen and Komuravelli, Rakesh and Overbey, Jeffrey and Simmons, Patrick and Sung, Hyojin},
	year = {2009},
	keywords = {deterministic languages, dpj, DRF language},
	pages = {97},
	file = {bocchino.dpj.oopsla.2009.pdf:/Users/devietti/Documents/bibliotheca/zotero/storage/35XFE383/bocchino.dpj.oopsla.2009.pdf:application/pdf}
}

@article{rinard_design_1998,
	title = {The design, implementation, and evaluation of {Jade}},
	volume = {20},
	issn = {0164-0925},
	url = {http://doi.acm.org/10.1145/291889.291893},
	doi = {10.1145/291889.291893},
	abstract = {Jade is a portable, implicitly parallel language designed for exploiting task-level concurrency.Jade programmers start with a program written in a standard serial, imperative language, then use Jade constructs to declare how parts of the program access data. The Jade implementation uses this data access information to automatically extract the concurrency and map the application onto the machine at hand. The resulting parallel execution preserves the semantics of the original serial program. We have implemented Jade as an extension to C, and Jade implementations exist for s hared-memory multiprocessors, homogeneous message-passing machines, and heterogeneous networks of workstations. In this atricle we discuss the design goals and decisions that determined the final form of Jade and present an overview of the Jade implementation. We also present our  experience using Jade to implement several complete scientific and engineering applications. We use this experience to evaluate how the different Jade language features were used in practice and how well Jade as a whole supports the process of developing parallel applications. We find that the basic idea of preserving the serial semantics simplifies the program development process, and that the concept of using data access specifications to guide the parallelization offers significant advantages over more traditional control-based approaches. We also find that the Jade data model can interact poorly with concurrency patterns that write disjoint pieces of a single aggregate data structure, although this problem arises in only one of the applications.},
	number = {3},
	urldate = {2012-09-12},
	journal = {ACM Transactions on Programming Languages and Systems},
	author = {Rinard, Martin C. and Lam, Monica S.},
	month = may,
	year = {1998},
	keywords = {parallel computing, parallel programming languages},
	pages = {483--545},
	file = {toplas98.pdf:/Users/devietti/Documents/bibliotheca/zotero/storage/NNC9FQQ6/toplas98.pdf:application/pdf}
}

@techreport{guy_blelloch_nesl:_1992,
	address = {Pittsburgh, PA},
	type = {Technical {Report}},
	title = {{NESL}: {A} {Nested} {Data}-{Parallel} {Language}},
	abstract = {This report describes NESL, a strongly-typed, applicative, data-parallel language. NESL is intended to be used as a portable interface for programming a variety of parallel and vector supercomputers, and as a basis for teaching parallel algorithms. Parallelism is supplied through a simple set of data-parallel constructs based on vectors, including a mechanism for applying any function over the elements of a vector in parallel and a rich set of parallel functions that manipulate vectors. NESL fully supports nested vectors and nested parallelism--the ability to take a parallel function and apply it over multiple instances in parallel. Nested parallelism is important for implementing algorithms with complex and dynamically changing data structures, such as required in many graph and sparse matrix algorithms. NESL also provides a mechanism for calculating the asymptotic running time for a program on various parallel machine models, including the parallel random access machine (PRAM). This is useful for estimating running times of algorithms on actual machines and, when teaching algorithms, for supplying a close correspondence between the code and the theoretical complexity. This report defines NESL and describes several examples of algorithms coded in the language. The examples include algorithms for median finding, sorting, string searching, finding prime numbers, and finding a planar convex hull. NESL currently compiles to an intermediate language called VCODE, which runs on the Cray Y-MP, Connection Machine CM-2, and Encore Multimax. For many algorithms, the current implementation gives performance close to optimized machine-specific code for these machines.},
	number = {CMU-CS-92-103},
	institution = {Carnegie Mellon University},
	author = {{Guy Blelloch}},
	year = {1992}
}

@inproceedings{john_mellor-crummey_--fly_1991,
	address = {Albuquerque, New Mexico, United States},
	title = {On-the-fly detection of data races for programs with nested fork-join parallelism},
	url = {http://portal.acm.org/citation.cfm?doid=125826.125861},
	doi = {10.1145/125826.125861},
	booktitle = {Proceedings of the 1991 {ACM}/{IEEE} conference on {Supercomputing}  - {Supercomputing} '91},
	author = {{John Mellor-Crummey}},
	year = {1991},
	keywords = {race detection, structured parallelism},
	pages = {24--33}
}

@inproceedings{mai_zheng_grace:_2011,
	address = {New York, NY},
	title = {{GRace}: a low-overhead mechanism for detecting data races in {GPU} programs},
	booktitle = {Proceedings of the 16th {ACM} symposium on {Principles} and practice of parallel programming},
	author = {{Mai Zheng} and {Vignesh T. Ravi} and {Feng Qin} and {Gagan Agrawal}},
	year = {2011},
	keywords = {gpu, race detection},
	file = {GRace-PPoPP11.pdf:/Users/devietti/Documents/bibliotheca/zotero/storage/QHDWMT2N/GRace-PPoPP11.pdf:application/pdf}
}

@inproceedings{raman:spd3,
 author = {Raman, Raghavan and Zhao, Jisheng and Sarkar, Vivek and Vechev, Martin and Yahav, Eran},
 title = {Scalable and Precise Dynamic Datarace Detection for Structured Parallelism},
 booktitle = {Proceedings of the 33rd ACM SIGPLAN Conference on Programming Language Design and Implementation},
 series = {PLDI '12},
 year = {2012},
 isbn = {978-1-4503-1205-9},
 location = {Beijing, China},
 pages = {531--542},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/2254064.2254127},
 doi = {10.1145/2254064.2254127},
 acmid = {2254127},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {data races, parallelism, program analysis},
}

@inproceedings{petrov_race_2012,
	address = {New York, NY, USA},
	series = {{PLDI} '12},
	title = {Race detection for web applications},
	isbn = {978-1-4503-1205-9},
	url = {http://doi.acm.org/10.1145/2254064.2254095},
	doi = {10.1145/2254064.2254095},
	abstract = {Modern web pages are becoming increasingly full-featured, and this additional functionality often requires greater use of asynchrony. Unfortunately, this asynchrony can trigger unexpected concurrency errors, even though web page scripts are executed sequentially. We present the first formulation of a happens-before relation for common web platform features. Developing this relation was a non-trivial task, due to complex feature interactions and browser differences. We also present a logical memory access model for web applications that abstracts away browser implementation details. Based on the above, we implemented WebRacer, the first dynamic race detector for web applications. WebRacer is implemented atop the production-quality WebKit engine, enabling testing of full-featured web sites. WebRacer can also simulate certain user actions, exposing more races. We evaluated WebRacer by testing a large set of Fortune 100 company web sites. We discovered many harmful races, and also gained insights into how developers handle asynchrony in practice.},
	urldate = {2012-09-12},
	booktitle = {Proceedings of the 33rd {ACM} {SIGPLAN} conference on {Programming} {Language} {Design} and {Implementation}},
	publisher = {ACM},
	author = {Petrov, Boris and Vechev, Martin and Sridharan, Manu and Dolby, Julian},
	year = {2012},
	keywords = {asynchrony, concurrency, data race, non determinism, web analysis},
	pages = {251--262},
	file = {pldi12-web-races.pdf:/Users/devietti/Documents/bibliotheca/zotero/storage/VJG9S7UA/pldi12-web-races.pdf:application/pdf}
}

@inproceedings{raychev_effective_2013,
	address = {New York, NY, USA},
	series = {{OOPSLA} '13},
	title = {Effective {Race} {Detection} for {Event}-driven {Programs}},
	isbn = {978-1-4503-2374-1},
	url = {http://doi.acm.org/10.1145/2509136.2509538},
	doi = {10.1145/2509136.2509538},
	abstract = {Like shared-memory multi-threaded programs, event-driven programs such as client-side web applications are susceptible to data races that are hard to reproduce and debug. Race detection for such programs is hampered by their pervasive use of ad hoc synchronization, which can lead to a prohibitive number of false positives. Race detection also faces a scalability challenge, as a large number of short-running event handlers can quickly overwhelm standard vector-clock-based techniques. This paper presents several novel contributions that address both of these challenges. First, we introduce race coverage, a systematic method for exposing ad hoc synchronization and other (potentially harmful) races to the user, significantly reducing false positives. Second, we present an efficient connectivity algorithm for computing race coverage. The algorithm is based on chain decomposition and leverages the structure of event-driven programs to dramatically decrease the overhead of vector clocks. We implemented our techniques in a tool called EventRacer and evaluated it on a number of public web sites. The results indicate substantial performance and precision improvements of our approach over the state-of-the-art. Using EventRacer, we found many harmful races, most of which are beyond the reach of current techniques.},
	urldate = {2014-07-26},
	booktitle = {Proceedings of the 2013 {ACM} {SIGPLAN} {International} {Conference} on {Object} {Oriented} {Programming} {Systems} {Languages} \& {Applications}},
	publisher = {ACM},
	author = {Raychev, Veselin and Vechev, Martin and Sridharan, Manu},
	year = {2013},
	keywords = {asynchrony, concurrency, Nondeterminism, race detection, web},
	pages = {151--166},
	file = {oopsla13-web.pdf:/Users/devietti/Documents/bibliotheca/zotero/storage/RD26NXJP/oopsla13-web.pdf:application/pdf}
}

@inproceedings{hsiao_race_2014,
	address = {New York, NY, USA},
	series = {{PLDI} '14},
	title = {Race {Detection} for {Event}-driven {Mobile} {Applications}},
	isbn = {978-1-4503-2784-8},
	url = {http://doi.acm.org/10.1145/2594291.2594330},
	doi = {10.1145/2594291.2594330},
	abstract = {Mobile systems commonly support an event-based model of concurrent programming. This model, used in popular platforms such as Android, naturally supports mobile devices that have a rich array of sensors and user input modalities. Unfortunately, most existing tools for detecting concurrency errors of parallel programs focus on a thread-based model of concurrency. If one applies such tools directly to an event-based program, they work poorly because they infer false dependencies between unrelated events handled sequentially by the same thread. In this paper we present a race detection tool named CAFA for event-driven mobile systems. CAFA uses the causality model that we have developed for the Android event-driven system. A novel contribution of our model is that it accounts for the causal order due to the event queues, which are not accounted for in past data race detectors. Detecting races based on low-level races between memory accesses leads to a large number of false positives. CAFA overcomes this problem by checking for races between high-level operations. We discuss our experience in using CAFA for finding and understanding a number of known and unknown harmful races in open-source Android applications.},
	urldate = {2015-03-19},
	booktitle = {Proceedings of the 35th {ACM} {SIGPLAN} {Conference} on {Programming} {Language} {Design} and {Implementation}},
	publisher = {ACM},
	author = {Hsiao, Chun-Hung and Yu, Jie and Narayanasamy, Satish and Kong, Ziyun and Pereira, Cristiano L. and Pokam, Gilles A. and Chen, Peter M. and Flinn, Jason},
	year = {2014},
	keywords = {android, causality model, concurrency, event-driven, mobile application, race detection, use-free race},
	pages = {326--336},
	file = {ACM Full Text PDF:/Users/devietti/Documents/bibliotheca/zotero/storage/VW5KPI65/Hsiao et al. - 2014 - Race Detection for Event-driven Mobile Application.pdf:application/pdf}
}

@article{Das:2015:SPA:2775085.2766451,
 author = {Das, Madan and Southern, Gabriel and Renau, Jose},
 title = {Section-Based Program Analysis to Reduce Overhead of Detecting Unsynchronized Thread Communication},
 journal = {ACM Trans. Archit. Code Optim.},
 issue_date = {July 2015},
 volume = {12},
 number = {2},
 month = jun,
 year = {2015},
 issn = {1544-3566},
 pages = {23:23:1--23:23:26},
 articleno = {23},
 url = {http://doi.acm.org/10.1145/2766451},
 doi = {10.1145/2766451},
 acmid = {2766451},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Multiprocessing/multiprogramming/multitasking, compilers, parallel processing, program analysis, runtime environments, threads},
}

@inproceedings{Bender:2004:sporder:1007912.1007933,
 author = {Bender, Michael A. and Fineman, Jeremy T. and Gilbert, Seth and Leiserson, Charles E.},
 title = {On-the-fly Maintenance of Series-parallel Relationships in Fork-join Multithreaded Programs},
 booktitle = {Proceedings of the Sixteenth Annual ACM Symposium on Parallelism in Algorithms and Architectures},
 series = {SPAA '04},
 year = {2004},
 isbn = {1-58113-840-7},
 location = {Barcelona, Spain},
 pages = {133--144},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1007912.1007933},
 doi = {10.1145/1007912.1007933},
 acmid = {1007933},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Cilk, SP-bags, SP-hybrid, SP-order, algorithm, amortized analysis, data race, data structure, dynamic set, fork-join, graph, least common ancestor, locking, multi-threading, mutual exclusion, on the fly, order maintenance, parallel computing, parse tree, race detection, series-parallel, thread, trace, tree, work stealing},
}

@inproceedings{Bielik:2015:SRD:2814270.2814303,
 author = {Bielik, Pavol and Raychev, Veselin and Vechev, Martin},
 title = {Scalable Race Detection for Android Applications},
 booktitle = {Proceedings of the 2015 ACM SIGPLAN International Conference on Object-Oriented Programming, Systems, Languages, and Applications},
 series = {OOPSLA 2015},
 year = {2015},
 isbn = {978-1-4503-3689-5},
 location = {Pittsburgh, PA, USA},
 pages = {332--348},
 numpages = {17},
 url = {http://doi.acm.org/10.1145/2814270.2814303},
 doi = {10.1145/2814270.2814303},
 acmid = {2814303},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {Android, Data Races, Happens-before, Non-determinism},
}

@inproceedings{Morrisett:2012:RBF:2254064.2254111,
 author = {Morrisett, Greg and Tan, Gang and Tassarotti, Joseph and Tristan, Jean-Baptiste and Gan, Edward},
 title = {RockSalt: Better, Faster, Stronger SFI for the x86},
 booktitle = {Proceedings of the 33rd ACM SIGPLAN Conference on Programming Language Design and Implementation},
 series = {PLDI '12},
 year = {2012},
 isbn = {978-1-4503-1205-9},
 location = {Beijing, China},
 pages = {395--404},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/2254064.2254111},
 doi = {10.1145/2254064.2254111},
 acmid = {2254111},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {domain-specific languages, software fault isolation},
}
